// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/accounting" | "/calendar" | "/clear-offline-data" | "/customers" | "/database" | "/database/activities" | "/database/pricing" | "/database/regions" | "/database/suppliers" | "/database/transport" | "/debug-sync" | "/emergency-fix" | "/finance" | "/finance/payments" | "/finance/payments/new" | "/finance/reports" | "/finance/requests" | "/finance/treasury" | "/finance/treasury/disbursement" | "/guide" | "/hr" | "/login" | "/orders" | "/orders/[orderId]" | "/orders/[orderId]/documents" | "/orders/[orderId]/members" | "/orders/[orderId]/overview" | "/orders/[orderId]/payment" | "/profile-manager" | "/quotes" | "/quotes/[id]" | "/settings" | "/supabase-test" | "/test-offline" | "/timebox" | "/todos" | "/tours" | "/tours/[id]" | "/unauthorized" | "/visas" | "/workspace"
type PageRoutes = never
type LayoutRoutes = "/" | "/accounting" | "/timebox"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/accounting": {}
  "/calendar": {}
  "/clear-offline-data": {}
  "/customers": {}
  "/database": {}
  "/database/activities": {}
  "/database/pricing": {}
  "/database/regions": {}
  "/database/suppliers": {}
  "/database/transport": {}
  "/debug-sync": {}
  "/emergency-fix": {}
  "/finance": {}
  "/finance/payments": {}
  "/finance/payments/new": {}
  "/finance/reports": {}
  "/finance/requests": {}
  "/finance/treasury": {}
  "/finance/treasury/disbursement": {}
  "/guide": {}
  "/hr": {}
  "/login": {}
  "/orders": {}
  "/orders/[orderId]": { "orderId": string; }
  "/orders/[orderId]/documents": { "orderId": string; }
  "/orders/[orderId]/members": { "orderId": string; }
  "/orders/[orderId]/overview": { "orderId": string; }
  "/orders/[orderId]/payment": { "orderId": string; }
  "/profile-manager": {}
  "/quotes": {}
  "/quotes/[id]": { "id": string; }
  "/settings": {}
  "/supabase-test": {}
  "/test-offline": {}
  "/timebox": {}
  "/todos": {}
  "/tours": {}
  "/tours/[id]": { "id": string; }
  "/unauthorized": {}
  "/visas": {}
  "/workspace": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/accounting": never
  "/timebox": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
