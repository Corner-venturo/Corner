{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///Users/williamchien/Desktop/Venturo/venturo-new/src/lib/auth.ts"],"sourcesContent":["import jwt from 'jsonwebtoken';\nimport bcrypt from 'bcryptjs';\n\nconst JWT_SECRET = process.env.JWT_SECRET || 'venturo_app_jwt_secret_key_change_in_production_2024';\n\nexport interface AuthPayload {\n  id: string;\n  employeeNumber: string;\n  permissions: string[];\n  role: string;\n}\n\n// 生成 JWT token\nexport function generateToken(payload: AuthPayload): string {\n  try {\n    return jwt.sign(payload, JWT_SECRET, {\n      expiresIn: '8h',\n      issuer: 'venturo-app'\n    });\n  } catch (error) {\n    console.warn('JWT generation failed, using simple token', error);\n    // 如果 JWT 失敗，使用簡單的編碼方案\n    return btoa(JSON.stringify({\n      ...payload,\n      exp: Date.now() + 8 * 60 * 60 * 1000, // 8小時\n      iss: 'venturo-app'\n    }));\n  }\n}\n\n// 驗證 JWT token\nexport function verifyToken(token: string): AuthPayload | null {\n  try {\n    // 嘗試 JWT 驗證\n    const decoded = jwt.verify(token, JWT_SECRET) as AuthPayload;\n    return decoded;\n  } catch (jwtError) {\n    try {\n      // 如果 JWT 失敗，嘗試簡單解碼\n      const decoded = JSON.parse(atob(token));\n\n      // 檢查是否過期\n      if (decoded.exp && Date.now() > decoded.exp) {\n        console.log('Token expired');\n        return null;\n      }\n\n      return decoded as AuthPayload;\n    } catch (fallbackError) {\n      console.error('Token verification failed:', fallbackError);\n      return null;\n    }\n  }\n}\n\n// 加密密碼\nexport async function hashPassword(password: string): Promise<string> {\n  const saltRounds = 12;\n  return bcrypt.hash(password, saltRounds);\n}\n\n// 驗證密碼\nexport async function verifyPassword(password: string, hashedPassword: string): Promise<boolean> {\n  return bcrypt.compare(password, hashedPassword);\n}\n\n// 從 token 取得用戶資訊\nexport function getUserFromToken(token: string): AuthPayload | null {\n  return verifyToken(token);\n}\n\n// 檢查權限\nexport function hasPermission(userPermissions: string[], requiredPermission: string): boolean {\n  return userPermissions.includes(requiredPermission) ||\n         userPermissions.includes('super_admin') ||\n         userPermissions.includes('admin');\n}\n\n// 檢查角色\nexport function hasRole(userPermissions: string[], requiredRoles: string[]): boolean {\n  return requiredRoles.some(role => userPermissions.includes(role));\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU,IAAI;AAUtC,SAAS,cAAc,OAAoB;IAChD,IAAI;QACF,OAAO,gJAAG,CAAC,IAAI,CAAC,SAAS,YAAY;YACnC,WAAW;YACX,QAAQ;QACV;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,IAAI,CAAC,6CAA6C;QAC1D,sBAAsB;QACtB,OAAO,KAAK,KAAK,SAAS,CAAC;YACzB,GAAG,OAAO;YACV,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK;YAChC,KAAK;QACP;IACF;AACF;AAGO,SAAS,YAAY,KAAa;IACvC,IAAI;QACF,YAAY;QACZ,MAAM,UAAU,gJAAG,CAAC,MAAM,CAAC,OAAO;QAClC,OAAO;IACT,EAAE,OAAO,UAAU;QACjB,IAAI;YACF,mBAAmB;YACnB,MAAM,UAAU,KAAK,KAAK,CAAC,KAAK;YAEhC,SAAS;YACT,IAAI,QAAQ,GAAG,IAAI,KAAK,GAAG,KAAK,QAAQ,GAAG,EAAE;gBAC3C,QAAQ,GAAG,CAAC;gBACZ,OAAO;YACT;YAEA,OAAO;QACT,EAAE,OAAO,eAAe;YACtB,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,OAAO;QACT;IACF;AACF;AAGO,eAAe,aAAa,QAAgB;IACjD,MAAM,aAAa;IACnB,OAAO,4IAAM,CAAC,IAAI,CAAC,UAAU;AAC/B;AAGO,eAAe,eAAe,QAAgB,EAAE,cAAsB;IAC3E,OAAO,4IAAM,CAAC,OAAO,CAAC,UAAU;AAClC;AAGO,SAAS,iBAAiB,KAAa;IAC5C,OAAO,YAAY;AACrB;AAGO,SAAS,cAAc,eAAyB,EAAE,kBAA0B;IACjF,OAAO,gBAAgB,QAAQ,CAAC,uBACzB,gBAAgB,QAAQ,CAAC,kBACzB,gBAAgB,QAAQ,CAAC;AAClC;AAGO,SAAS,QAAQ,eAAyB,EAAE,aAAuB;IACxE,OAAO,cAAc,IAAI,CAAC,CAAA,OAAQ,gBAAgB,QAAQ,CAAC;AAC7D","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///Users/williamchien/Desktop/Venturo/venturo-new/src/lib/auth/local-auth-manager.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\n\n// ============= 1. 類型定義 =============\nexport interface LocalProfile {\n  id: string;\n  email: string;\n  employeeNumber: string;\n  chineseName: string;\n  englishName: string;\n  role: 'SUPER_ADMIN' | 'ADMIN' | 'EMPLOYEE';\n  permissions: string[];\n\n  // 離線認證相關\n  cachedPassword?: string; // 加密的密碼快取（用於背景同步）\n  pinHash?: string; // PIN 碼的雜湊值\n\n  // 個人資訊\n  personalInfo?: any;\n  jobInfo?: any;\n  salaryInfo?: any;\n  contracts?: any[];\n  attendance?: any;\n\n  // 元資料\n  lastLoginAt: string;\n  lastSyncAt?: string;\n  createdAt: string;\n  status: 'active' | 'inactive' | 'suspended';\n}\n\nexport interface ProfileCard {\n  id: string;\n  chineseName: string;\n  englishName: string;\n  role: string;\n  avatarUrl?: string;\n  lastLoginAt: string;\n}\n\n// ============= 2. 本地認證狀態管理 =============\ninterface LocalAuthState {\n  profiles: LocalProfile[];\n  currentProfile: LocalProfile | null;\n  lastSelectedProfileId: string | null;\n\n  // Profile 管理\n  addProfile: (profile: LocalProfile) => void;\n  removeProfile: (profileId: string) => void;\n  updateProfile: (profileId: string, updates: Partial<LocalProfile>) => void;\n  getProfileById: (profileId: string) => LocalProfile | null;\n  getProfileCards: () => ProfileCard[];\n\n  // 當前登入\n  setCurrentProfile: (profile: LocalProfile | null) => void;\n  getCurrentProfile: () => LocalProfile | null;\n\n  // PIN 碼管理\n  setPinForProfile: (profileId: string, pinHash: string) => void;\n  verifyPin: (profileId: string, pin: string) => Promise<boolean>;\n\n  // 清理\n  clearAll: () => void;\n}\n\nexport const useLocalAuthStore = create<LocalAuthState>()(\n  persist(\n    (set, get) => ({\n      profiles: [],\n      currentProfile: null,\n      lastSelectedProfileId: null,\n\n      addProfile: (profile) => {\n        set((state) => {\n          // 檢查是否已存在\n          const exists = state.profiles.some(p => p.id === profile.id);\n          if (exists) {\n            // 更新現有的\n            return {\n              profiles: state.profiles.map(p =>\n                p.id === profile.id\n                  ? { ...p, ...profile, lastLoginAt: new Date().toISOString() }\n                  : p\n              )\n            };\n          }\n          // 添加新的\n          return {\n            profiles: [...state.profiles, { ...profile, lastLoginAt: new Date().toISOString() }]\n          };\n        });\n      },\n\n      removeProfile: (profileId) => {\n        set((state) => ({\n          profiles: state.profiles.filter(p => p.id !== profileId),\n          currentProfile: state.currentProfile?.id === profileId ? null : state.currentProfile\n        }));\n      },\n\n      updateProfile: (profileId, updates) => {\n        set((state) => ({\n          profiles: state.profiles.map(p =>\n            p.id === profileId ? { ...p, ...updates } : p\n          ),\n          currentProfile: state.currentProfile?.id === profileId\n            ? { ...state.currentProfile, ...updates }\n            : state.currentProfile\n        }));\n      },\n\n      getProfileById: (profileId) => {\n        return get().profiles.find(p => p.id === profileId) || null;\n      },\n\n      getProfileCards: () => {\n        return get().profiles.map(profile => ({\n          id: profile.id,\n          chineseName: profile.chineseName,\n          englishName: profile.englishName,\n          role: profile.role,\n          lastLoginAt: profile.lastLoginAt\n        }));\n      },\n\n      setCurrentProfile: (profile) => {\n        // 同時儲存到 localStorage\n        if (profile) {\n          localStorage.setItem('current-profile-id', profile.id);\n        } else {\n          localStorage.removeItem('current-profile-id');\n        }\n\n        set({\n          currentProfile: profile,\n          lastSelectedProfileId: profile?.id || null\n        });\n\n        // 更新最後登入時間\n        if (profile) {\n          get().updateProfile(profile.id, {\n            lastLoginAt: new Date().toISOString()\n          });\n        }\n      },\n\n      getCurrentProfile: () => get().currentProfile,\n\n      setPinForProfile: (profileId, pinHash) => {\n        get().updateProfile(profileId, { pinHash });\n      },\n\n      verifyPin: async (profileId, pin) => {\n        const profile = get().getProfileById(profileId);\n        if (!profile || !profile.pinHash) {\n          return false;\n        }\n\n        // 使用 bcrypt 驗證 PIN\n        try {\n          const bcrypt = (await import('bcryptjs')).default;\n          return await bcrypt.compare(pin, profile.pinHash);\n        } catch (error) {\n          console.error('PIN 驗證失敗:', error);\n          return false;\n        }\n      },\n\n      clearAll: () => {\n        localStorage.removeItem('current-profile-id');\n        set({ profiles: [], currentProfile: null, lastSelectedProfileId: null });\n      }\n    }),\n    {\n      name: 'local-auth-storage',\n      version: 1,\n      partialize: (state) => ({\n        profiles: state.profiles,\n        currentProfile: state.currentProfile,  // 重要！確保持久化\n        lastSelectedProfileId: state.lastSelectedProfileId\n      })\n    }\n  )\n);\n\n// ============= 3. 密碼加密工具 =============\nexport class PasswordEncryption {\n  private static readonly ENCRYPTION_KEY = 'venturo-offline-auth-2024';\n\n  /**\n   * 簡單的密碼加密（用於本地快取）\n   * 注意：這不是高強度加密，僅用於防止明文儲存\n   */\n  static async encrypt(password: string): Promise<string> {\n    try {\n      // 使用 Web Crypto API\n      const encoder = new TextEncoder();\n      const data = encoder.encode(password);\n      const key = encoder.encode(this.ENCRYPTION_KEY);\n\n      // 簡單的 XOR 加密\n      const encrypted = new Uint8Array(data.length);\n      for (let i = 0; i < data.length; i++) {\n        encrypted[i] = data[i] ^ key[i % key.length];\n      }\n\n      return btoa(String.fromCharCode(...encrypted));\n    } catch (error) {\n      console.error('加密失敗:', error);\n      return btoa(password); // 降級方案\n    }\n  }\n\n  /**\n   * 解密密碼\n   */\n  static async decrypt(encryptedPassword: string): Promise<string> {\n    try {\n      const encoder = new TextEncoder();\n      const key = encoder.encode(this.ENCRYPTION_KEY);\n      const encrypted = Uint8Array.from(atob(encryptedPassword), c => c.charCodeAt(0));\n\n      // XOR 解密\n      const decrypted = new Uint8Array(encrypted.length);\n      for (let i = 0; i < encrypted.length; i++) {\n        decrypted[i] = encrypted[i] ^ key[i % key.length];\n      }\n\n      const decoder = new TextDecoder();\n      return decoder.decode(decrypted);\n    } catch (error) {\n      console.error('解密失敗:', error);\n      return atob(encryptedPassword); // 降級方案\n    }\n  }\n\n  /**\n   * 生成 PIN 碼雜湊\n   */\n  static async hashPin(pin: string): Promise<string> {\n    const bcrypt = (await import('bcryptjs')).default;\n    return bcrypt.hash(pin, 10);\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file:///Users/williamchien/Desktop/Venturo/venturo-new/src/lib/offline/sync-manager.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\n// ⚠️ 暫時註解以測試編譯問題\n// import { supabase } from '@/lib/supabase/client';\n// import { VenturoAPI } from '@/lib/supabase/api';\nimport { v4 as uuidv4 } from 'uuid';\n\n// ============= 1. 離線狀態管理 =============\ninterface OfflineState {\n  isOnline: boolean;\n  isInitialSync: boolean;\n  lastSyncTime: Date | null;\n  pendingChanges: SyncOperation[];\n  conflictResolutions: ConflictResolution[];\n\n  setOnline: (status: boolean) => void;\n  addPendingChange: (operation: SyncOperation) => void;\n  removePendingChange: (id: string) => void;\n  clearPendingChanges: () => void;\n  setLastSyncTime: (time: Date) => void;\n}\n\nexport const useOfflineStore = create<OfflineState>()(\n  persist(\n    (set) => ({\n      isOnline: typeof navigator !== 'undefined' ? navigator.onLine : true,\n      isInitialSync: false,\n      lastSyncTime: null,\n      pendingChanges: [],\n      conflictResolutions: [],\n\n      setOnline: (status) => set({ isOnline: status }),\n      addPendingChange: (operation) => set((state) => ({\n        pendingChanges: [...state.pendingChanges, operation]\n      })),\n      removePendingChange: (id) => set((state) => ({\n        pendingChanges: state.pendingChanges.filter(op => op.id !== id)\n      })),\n      clearPendingChanges: () => set({ pendingChanges: [] }),\n      setLastSyncTime: (time) => set({ lastSyncTime: time })\n    }),\n    {\n      name: 'offline-storage',\n      partialize: (state) => ({\n        pendingChanges: state.pendingChanges,\n        lastSyncTime: state.lastSyncTime\n      })\n    }\n  )\n);\n\n// ============= 2. 同步操作定義 =============\nexport interface SyncOperation {\n  id: string;\n  type: 'CREATE' | 'UPDATE' | 'DELETE';\n  table: string;\n  data: any;\n  localId?: string;\n  remoteId?: string;\n  timestamp: number;\n  retryCount: number;\n  userId: string;\n}\n\nexport interface ConflictResolution {\n  id: string;\n  table: string;\n  localData: any;\n  remoteData: any;\n  resolution: 'LOCAL' | 'REMOTE' | 'MERGE';\n  resolvedData?: any;\n  timestamp: number;\n}\n\n// ============= 3. 離線資料庫管理 =============\nexport class LocalDatabase {\n  private dbName = 'venturo-local';\n  private version = 2; // 升級版本以加入 visas 表格\n  private db: IDBDatabase | null = null;\n\n  async init(): Promise<void> {\n    // 檢查是否在瀏覽器環境\n    if (typeof window === 'undefined' || !window.indexedDB) {\n      console.warn('IndexedDB not available (server-side)');\n      return Promise.resolve();\n    }\n\n    return new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.dbName, this.version);\n\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => {\n        this.db = request.result;\n        resolve();\n      };\n\n      request.onupgradeneeded = (event) => {\n        const db = (event.target as IDBOpenDBRequest).result;\n\n        // 建立各個資料表的 Object Store\n        const tables = [\n          'tours', 'orders', 'customers', 'payments',\n          'members', 'users', 'todos', 'quotes', 'visas'\n        ];\n\n        tables.forEach(table => {\n          if (!db.objectStoreNames.contains(table)) {\n            const store = db.createObjectStore(table, { keyPath: 'id' });\n            store.createIndex('sync_status', 'sync_status', { unique: false });\n            store.createIndex('updated_at', 'updated_at', { unique: false });\n          }\n        });\n\n        // 建立同步元資料表\n        if (!db.objectStoreNames.contains('sync_metadata')) {\n          db.createObjectStore('sync_metadata', { keyPath: 'table' });\n        }\n      };\n    });\n  }\n\n  async get(table: string, id: string): Promise<any> {\n    if (!this.db) await this.init();\n    if (!this.db) return null;\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([table], 'readonly');\n      const store = transaction.objectStore(table);\n      const request = store.get(id);\n\n      request.onsuccess = () => resolve(request.result);\n      request.onerror = () => reject(request.error);\n    });\n  }\n\n  async getAll(table: string): Promise<any[]> {\n    if (!this.db) await this.init();\n    if (!this.db) return [];\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([table], 'readonly');\n      const store = transaction.objectStore(table);\n      const request = store.getAll();\n\n      request.onsuccess = () => resolve(request.result || []);\n      request.onerror = () => reject(request.error);\n    });\n  }\n\n  async put(table: string, data: any): Promise<void> {\n    if (!this.db) await this.init();\n    if (!this.db) return;\n\n    const record = {\n      ...data,\n      sync_status: 'pending',\n      updated_at: new Date().toISOString(),\n      local_updated: true\n    };\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([table], 'readwrite');\n      const store = transaction.objectStore(table);\n      const request = store.put(record);\n\n      request.onsuccess = () => resolve();\n      request.onerror = () => reject(request.error);\n    });\n  }\n\n  async delete(table: string, id: string): Promise<void> {\n    if (!this.db) await this.init();\n    if (!this.db) return;\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([table], 'readwrite');\n      const store = transaction.objectStore(table);\n      const request = store.delete(id);\n\n      request.onsuccess = () => resolve();\n      request.onerror = () => reject(request.error);\n    });\n  }\n\n  async getUnsyncedRecords(table: string): Promise<any[]> {\n    if (!this.db) await this.init();\n    if (!this.db) return [];\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([table], 'readonly');\n      const store = transaction.objectStore(table);\n      const index = store.index('sync_status');\n      const request = index.getAll('pending');\n\n      request.onsuccess = () => resolve(request.result || []);\n      request.onerror = () => reject(request.error);\n    });\n  }\n}\n\n// ============= 4. 同步管理器 =============\nexport class SyncManager {\n  private localDb: LocalDatabase;\n  private syncQueue: SyncOperation[] = [];\n  private isSyncing = false;\n  private syncInterval: NodeJS.Timeout | null = null;\n\n  constructor() {\n    this.localDb = new LocalDatabase();\n    // 只在瀏覽器環境初始化\n    if (typeof window !== 'undefined') {\n      this.init();\n    }\n  }\n\n  private async init() {\n    await this.localDb.init();\n\n    // 監聽網路狀態變化\n    if (typeof window !== 'undefined') {\n      window.addEventListener('online', () => this.handleOnline());\n      window.addEventListener('offline', () => this.handleOffline());\n    }\n\n    // 不啟動定期同步，只在有變更時同步\n    // this.startPeriodicSync();\n  }\n\n  private handleOnline = async () => {\n    console.log('🟢 網路已連接，開始同步...');\n    useOfflineStore.getState().setOnline(true);\n    await this.syncAll();\n  };\n\n  private handleOffline = () => {\n    console.log('🔴 網路已斷開，切換到離線模式');\n    useOfflineStore.getState().setOnline(false);\n  };\n\n  private startPeriodicSync() {\n    this.syncInterval = setInterval(() => {\n      if (useOfflineStore.getState().isOnline && !this.isSyncing) {\n        this.syncPendingChanges();\n      }\n    }, 5000); // 改為 5 秒，更即時的同步\n  }\n\n  // ============= 樂觀更新 =============\n  async optimisticCreate(table: string, data: any): Promise<any> {\n    const tempId = `temp_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n    // 處理需要伺服器編號的欄位\n    const record = {\n      ...data,\n      id: tempId,\n      // 如果是訂單，使用「待編號」\n      ...(table === 'orders' && { orderNumber: '待編號' }),\n      // 如果是旅遊團，使用「待編號」\n      ...(table === 'tours' && { code: '待編號' }),\n      // 如果是報價單，使用「待編號」\n      ...(table === 'quotes' && { quoteNumber: '待編號' }),\n      syncStatus: 'pending',\n      isOfflineDraft: true // 標記為離線草稿\n    };\n\n    await this.localDb.put(table, record);\n\n    const operation: SyncOperation = {\n      id: uuidv4(),\n      type: 'CREATE',\n      table,\n      data, // 保存原始資料（不含臨時欄位）\n      localId: tempId,\n      timestamp: Date.now(),\n      retryCount: 0,\n      userId: data.created_by || 'unknown'\n    };\n\n    useOfflineStore.getState().addPendingChange(operation);\n\n    if (useOfflineStore.getState().isOnline) {\n      this.syncOperation(operation);\n    }\n\n    return record;\n  }\n\n  async optimisticUpdate(table: string, id: string, updates: any): Promise<any> {\n    const existing = await this.localDb.get(table, id);\n    const updated = { ...existing, ...updates };\n\n    await this.localDb.put(table, updated);\n\n    const operation: SyncOperation = {\n      id: uuidv4(),\n      type: 'UPDATE',\n      table,\n      data: { id, ...updates },\n      remoteId: id,\n      timestamp: Date.now(),\n      retryCount: 0,\n      userId: updates.updated_by || 'unknown'\n    };\n\n    useOfflineStore.getState().addPendingChange(operation);\n\n    if (useOfflineStore.getState().isOnline) {\n      this.syncOperation(operation);\n    }\n\n    return updated;\n  }\n\n  async optimisticDelete(table: string, id: string): Promise<void> {\n    await this.localDb.put(table, {\n      id,\n      deleted: true,\n      deleted_at: new Date().toISOString()\n    });\n\n    const operation: SyncOperation = {\n      id: uuidv4(),\n      type: 'DELETE',\n      table,\n      data: { id },\n      remoteId: id,\n      timestamp: Date.now(),\n      retryCount: 0,\n      userId: 'unknown'\n    };\n\n    useOfflineStore.getState().addPendingChange(operation);\n\n    if (useOfflineStore.getState().isOnline) {\n      this.syncOperation(operation);\n    }\n  }\n\n  // ============= 同步執行 =============\n  private async syncOperation(operation: SyncOperation): Promise<void> {\n    // 📦 純本地模式 - 停用 Supabase 同步\n    console.log(`📦 本地模式：跳過同步操作 ${operation.type} ${operation.table}`);\n    useOfflineStore.getState().removePendingChange(operation.id);\n    return;\n\n    /* ⚠️ Supabase 同步功能已停用\n    try {\n      switch (operation.type) {\n        case 'CREATE':\n          // 1. 如果需要伺服器編號，先取號\n          let dataWithNumber = { ...operation.data };\n\n          if (operation.table === 'orders' && !operation.data.orderNumber) {\n            const orderNumber = await this.getNextOrderNumber();\n            dataWithNumber.orderNumber = orderNumber;\n          } else if (operation.table === 'tours' && !operation.data.code) {\n            const code = await this.getNextTourCode();\n            dataWithNumber.code = code;\n          } else if (operation.table === 'quotes' && !operation.data.quoteNumber) {\n            const quoteNumber = await this.getNextQuoteNumber();\n            dataWithNumber.quoteNumber = quoteNumber;\n          }\n\n          // 2. 使用 VenturoAPI 插入（自動處理 camelCase -> snake_case）\n          const created = await VenturoAPI.create(operation.table, dataWithNumber);\n\n          // 3. 更新本地記錄：用真實 ID 和編號替換臨時的\n          if (created && operation.localId) {\n            await this.updateLocalId(operation.table, operation.localId, created);\n          }\n          break;\n\n        case 'UPDATE':\n          // 使用 VenturoAPI 更新（自動處理 camelCase -> snake_case）\n          if (!operation.data.id) {\n            throw new Error('Update operation missing id');\n          }\n          await VenturoAPI.update(operation.table, operation.data.id, operation.data);\n          break;\n\n        case 'DELETE':\n          // 使用 VenturoAPI 刪除\n          if (!operation.remoteId) {\n            throw new Error('Delete operation missing remoteId');\n          }\n          await VenturoAPI.delete(operation.table, operation.remoteId);\n          break;\n      }\n\n      // 同步成功，移除待同步項目\n      useOfflineStore.getState().removePendingChange(operation.id);\n\n    } catch (error) {\n      // 只在開發模式顯示同步錯誤\n      if (process.env.NODE_ENV === 'development') {\n        console.warn(`⚠️ 同步失敗 [${operation.type}] - 將稍後重試:`, error);\n      }\n\n      operation.retryCount++;\n\n      if (operation.retryCount > 3) {\n        await this.handleConflict(operation, error);\n      }\n    }\n    */\n  }\n\n  private async updateLocalId(table: string, localId: string, remoteData: any) {\n    const localRecord = await this.localDb.get(table, localId);\n    if (localRecord) {\n      // 刪除臨時記錄\n      await this.localDb.delete(table, localId);\n\n      // 用伺服器的完整資料（包含真實 ID 和編號）建立新記錄\n      await this.localDb.put(table, {\n        ...remoteData,\n        syncStatus: 'synced',\n        isOfflineDraft: false\n      });\n\n      console.log(`✅ 已同步 ${table}:`, {\n        from: localId,\n        to: remoteData.id,\n        number: remoteData.orderNumber || remoteData.code || remoteData.quoteNumber\n      });\n    }\n  }\n\n  // ============= 編號生成 =============\n  private async getNextOrderNumber(): Promise<string> {\n    // 從 Supabase 取得最新的訂單編號\n    const { data, error } = await supabase\n      .from('orders')\n      .select('orderNumber')\n      .order('created_at', { ascending: false })\n      .limit(1)\n      .single();\n\n    if (error || !data) {\n      // 如果沒有資料，從 ORDER-2024-0001 開始\n      return `ORDER-${new Date().getFullYear()}-0001`;\n    }\n\n    // 解析編號並遞增\n    const match = data.orderNumber.match(/ORDER-(\\d{4})-(\\d{4})/);\n    if (match) {\n      const year = new Date().getFullYear();\n      const lastNumber = parseInt(match[2]);\n      const newNumber = (lastNumber + 1).toString().padStart(4, '0');\n      return `ORDER-${year}-${newNumber}`;\n    }\n\n    return `ORDER-${new Date().getFullYear()}-0001`;\n  }\n\n  private async getNextTourCode(): Promise<string> {\n    const { data, error } = await supabase\n      .from('tours')\n      .select('code')\n      .order('created_at', { ascending: false })\n      .limit(1)\n      .single();\n\n    if (error || !data) {\n      return `TOUR-${new Date().getFullYear()}-0001`;\n    }\n\n    const match = data.code.match(/TOUR-(\\d{4})-(\\d{4})/);\n    if (match) {\n      const year = new Date().getFullYear();\n      const lastNumber = parseInt(match[2]);\n      const newNumber = (lastNumber + 1).toString().padStart(4, '0');\n      return `TOUR-${year}-${newNumber}`;\n    }\n\n    return `TOUR-${new Date().getFullYear()}-0001`;\n  }\n\n  private async getNextQuoteNumber(): Promise<string> {\n    const { data, error } = await supabase\n      .from('quotes')\n      .select('quoteNumber')\n      .order('created_at', { ascending: false })\n      .limit(1)\n      .single();\n\n    if (error || !data) {\n      return `QUOTE-${new Date().getFullYear()}-0001`;\n    }\n\n    const match = data.quoteNumber.match(/QUOTE-(\\d{4})-(\\d{4})/);\n    if (match) {\n      const year = new Date().getFullYear();\n      const lastNumber = parseInt(match[2]);\n      const newNumber = (lastNumber + 1).toString().padStart(4, '0');\n      return `QUOTE-${year}-${newNumber}`;\n    }\n\n    return `QUOTE-${new Date().getFullYear()}-0001`;\n  }\n\n  // ============= 衝突處理 =============\n  private async handleConflict(operation: SyncOperation, error: any) {\n    console.warn('偵測到同步衝突:', operation);\n\n    const conflict: ConflictResolution = {\n      id: uuidv4(),\n      table: operation.table,\n      localData: operation.data,\n      remoteData: null,\n      resolution: 'LOCAL',\n      timestamp: Date.now()\n    };\n\n    useOfflineStore.setState((state) => ({\n      conflictResolutions: [...state.conflictResolutions, conflict]\n    }));\n  }\n\n  // ============= 批量同步 =============\n  async syncAll(): Promise<void> {\n    if (this.isSyncing) return;\n\n    this.isSyncing = true;\n\n    try {\n      await this.pullRemoteChanges();\n      await this.pushLocalChanges();\n\n      useOfflineStore.getState().setLastSyncTime(new Date());\n\n      console.log('✅ 同步完成');\n\n    } catch (error) {\n      console.error('同步失敗:', error);\n    } finally {\n      this.isSyncing = false;\n    }\n  }\n\n  private async pullRemoteChanges() {\n    // 📦 純本地模式 - 停用 Supabase 同步\n    console.log('📦 本地模式：跳過從雲端同步');\n    return;\n\n    /* ⚠️ Supabase 同步功能已停用\n    const lastSync = useOfflineStore.getState().lastSyncTime;\n    const tables = ['tours', 'orders', 'customers', 'payments', 'todos', 'quotes'];\n\n    for (const table of tables) {\n      try {\n        let query = supabase.from(table).select('*');\n\n        if (lastSync) {\n          query = query.gt('updated_at', lastSync.toISOString());\n        }\n\n        const { data, error } = await query;\n\n        if (error) throw error;\n\n        for (const record of data || []) {\n          await this.localDb.put(table, {\n            ...record,\n            sync_status: 'synced'\n          });\n        }\n\n      } catch (error) {\n        console.error(`同步 ${table} 失敗:`, error);\n      }\n    }\n    */\n  }\n\n  private async pushLocalChanges() {\n    const pendingChanges = useOfflineStore.getState().pendingChanges;\n\n    for (const operation of pendingChanges) {\n      await this.syncOperation(operation);\n    }\n  }\n\n  private async syncPendingChanges() {\n    const pendingChanges = useOfflineStore.getState().pendingChanges;\n\n    if (pendingChanges.length === 0) return;\n\n    console.log(`⏳ 同步 ${pendingChanges.length} 個待處理變更...`);\n\n    // 去除重複的操作（相同 table + id）\n    const uniqueOperations = pendingChanges.reduce((acc, op) => {\n      const key = `${op.table}-${op.data?.id || op.localId}`;\n      if (!acc.has(key)) {\n        acc.set(key, op);\n      }\n      return acc;\n    }, new Map());\n\n    console.log(`✓ 去除重複後：${uniqueOperations.size} 個待處理變更`);\n\n    // 並行處理所有同步操作，提升效能\n    await Promise.allSettled(\n      Array.from(uniqueOperations.values()).map(operation => this.syncOperation(operation))\n    );\n  }\n\n  dispose() {\n    if (this.syncInterval) {\n      clearInterval(this.syncInterval);\n    }\n  }\n\n  getLocalDb() {\n    return this.localDb;\n  }\n}\n\n// ============= 5. React Hooks =============\nexport function useOfflineSync() {\n  const { isOnline, pendingChanges, lastSyncTime } = useOfflineStore();\n\n  return {\n    isOnline,\n    hasPendingChanges: pendingChanges.length > 0,\n    pendingCount: pendingChanges.length,\n    lastSyncTime,\n    syncStatus: !isOnline ? 'offline' :\n                pendingChanges.length > 0 ? 'pending' :\n                'synced'\n  };\n}\n\n// 單例模式 - 懶加載，只在瀏覽器環境創建\nlet syncManagerInstance: SyncManager | null = null;\n\nexport function getSyncManager(): SyncManager {\n  if (typeof window === 'undefined') {\n    // Server-side: 返回 mock 對象\n    return {} as SyncManager;\n  }\n\n  if (!syncManagerInstance) {\n    syncManagerInstance = new SyncManager();\n  }\n\n  return syncManagerInstance;\n}\n\n// 為了向下相容，保留舊的導出方式\nexport const syncManager = typeof window !== 'undefined' ? getSyncManager() : {} as SyncManager;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 815, "column": 0}, "map": {"version":3,"sources":["file:///Users/williamchien/Desktop/Venturo/venturo-new/src/services/offline-auth.service.ts"],"sourcesContent":["import { verifyPassword } from '@/lib/auth';\nimport {\n  useLocalAuthStore,\n  LocalProfile,\n  PasswordEncryption\n} from '@/lib/auth/local-auth-manager';\nimport { useOfflineStore } from '@/lib/offline/sync-manager';\n\n// ============= 離線認證服務 =============\nexport class OfflineAuthService {\n  /**\n   * 初次登入（需要網路）\n   * 從 Supabase 驗證並建立本地 Profile\n   */\n  static async initialLogin(\n    email: string,\n    password: string\n  ): Promise<{ success: boolean; profile?: LocalProfile; message?: string }> {\n    try {\n      console.log('🔐 純本地登入驗證...');\n      console.log('輸入的帳號:', email);\n\n      // ⚠️ 純本地模式 - 不使用 Supabase\n      // 建立測試帳號資料\n      const testUsers: Record<string, { password: string; data: any }> = {\n        'admin': {\n          password: 'admin123',\n          data: {\n            id: 'admin-001',\n            employee_number: 'admin',\n            chinese_name: '管理員',\n            english_name: 'Admin',\n            permissions: ['super_admin', 'admin'],\n            status: 'active' as const\n          }\n        },\n        'william01': {\n          password: '123456',\n          data: {\n            id: 'william-001',\n            employee_number: 'william01',\n            chinese_name: '威廉',\n            english_name: 'William',\n            permissions: ['admin'],\n            status: 'active' as const\n          }\n        },\n        'test': {\n          password: 'test',\n          data: {\n            id: 'test-001',\n            employee_number: 'test',\n            chinese_name: '測試員工',\n            english_name: 'Test',\n            permissions: [],\n            status: 'active' as const\n          }\n        }\n      };\n\n      // 1. 檢查測試帳號\n      const user = testUsers[email.toLowerCase()];\n\n      if (!user) {\n        return {\n          success: false,\n          message: '用戶名稱或密碼錯誤'\n        };\n      }\n\n      // 2. 驗證密碼\n      if (password !== user.password) {\n        return {\n          success: false,\n          message: '用戶名稱或密碼錯誤'\n        };\n      }\n\n      const employee = user.data;\n\n      // 3. 建立本地 Profile\n      console.log('開始加密密碼...');\n      let encryptedPassword;\n      try {\n        encryptedPassword = await PasswordEncryption.encrypt(password);\n        console.log('密碼加密成功');\n      } catch (encErr) {\n        console.error('密碼加密失敗:', encErr);\n        throw encErr;\n      }\n\n      const profile: LocalProfile = {\n        id: employee.id,\n        email: employee.employee_number + '@venturo.local',\n        employeeNumber: employee.employee_number,\n        chineseName: employee.chinese_name,\n        englishName: employee.english_name,\n        role: this.determineRole(employee.permissions),\n        permissions: employee.permissions || [],\n        cachedPassword: encryptedPassword,\n        personalInfo: employee.personal_info,\n        jobInfo: employee.job_info,\n        salaryInfo: employee.salary_info,\n        contracts: employee.contracts,\n        attendance: employee.attendance,\n        lastLoginAt: new Date().toISOString(),\n        createdAt: new Date().toISOString(),\n        status: employee.status\n      };\n\n      // 4. 儲存到本地\n      console.log('準備儲存 Profile:', profile);\n      try {\n        useLocalAuthStore.getState().addProfile(profile);\n        console.log('Profile 已加入');\n        useLocalAuthStore.getState().setCurrentProfile(profile);\n        console.log('Profile 已設為當前');\n      } catch (storeErr) {\n        console.error('儲存 Profile 失敗:', storeErr);\n        throw storeErr;\n      }\n\n      console.log('✅ Profile 已建立並儲存到本地');\n\n      return { success: true, profile };\n\n    } catch (error) {\n      console.error('初次登入失敗:', error);\n      return {\n        success: false,\n        message: '登入失敗，請稍後再試'\n      };\n    }\n  }\n\n  /**\n   * 離線登入（使用 PIN 碼或密碼）\n   */\n  static async offlineLogin(\n    profileId: string,\n    credential: string,\n    usePin: boolean = true\n  ): Promise<{ success: boolean; profile?: LocalProfile; message?: string }> {\n    try {\n      const profile = useLocalAuthStore.getState().getProfileById(profileId);\n\n      if (!profile) {\n        return {\n          success: false,\n          message: '找不到此用戶資料'\n        };\n      }\n\n      let isValid = false;\n\n      if (usePin) {\n        // 使用 PIN 碼驗證\n        if (!profile.pinHash) {\n          return {\n            success: false,\n            message: '此帳號尚未設定 PIN 碼'\n          };\n        }\n\n        isValid = await useLocalAuthStore.getState().verifyPin(profileId, credential);\n      } else {\n        // 使用密碼驗證（離線）\n        if (!profile.cachedPassword) {\n          return {\n            success: false,\n            message: '此帳號無法使用離線登入'\n          };\n        }\n\n        const decryptedPassword = await PasswordEncryption.decrypt(profile.cachedPassword);\n        isValid = credential === decryptedPassword;\n      }\n\n      if (!isValid) {\n        return {\n          success: false,\n          message: usePin ? 'PIN 碼錯誤' : '密碼錯誤'\n        };\n      }\n\n      // 設定為當前登入\n      useLocalAuthStore.getState().setCurrentProfile(profile);\n\n      console.log('✅ 離線登入成功');\n\n      // 背景嘗試刷新 Supabase session\n      if (useOfflineStore.getState().isOnline && profile.cachedPassword) {\n        this.refreshSupabaseSession(profile).catch(console.error);\n      }\n\n      return { success: true, profile };\n\n    } catch (error) {\n      console.error('離線登入失敗:', error);\n      return {\n        success: false,\n        message: '登入失敗，請稍後再試'\n      };\n    }\n  }\n\n  /**\n   * 設定 PIN 碼\n   */\n  static async setupPin(profileId: string, pin: string): Promise<boolean> {\n    try {\n      if (pin.length < 4 || pin.length > 6) {\n        throw new Error('PIN 碼長度必須是 4-6 位數字');\n      }\n\n      if (!/^\\d+$/.test(pin)) {\n        throw new Error('PIN 碼只能包含數字');\n      }\n\n      const pinHash = await PasswordEncryption.hashPin(pin);\n      useLocalAuthStore.getState().setPinForProfile(profileId, pinHash);\n\n      console.log('✅ PIN 碼設定成功');\n      return true;\n\n    } catch (error) {\n      console.error('設定 PIN 碼失敗:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 切換角色\n   */\n  static switchProfile(profileId: string): boolean {\n    try {\n      const profile = useLocalAuthStore.getState().getProfileById(profileId);\n\n      if (!profile) {\n        console.error('找不到 Profile:', profileId);\n        return false;\n      }\n\n      useLocalAuthStore.getState().setCurrentProfile(profile);\n      console.log('✅ 已切換到:', profile.chineseName);\n\n      // 背景刷新 session\n      if (useOfflineStore.getState().isOnline && profile.cachedPassword) {\n        this.refreshSupabaseSession(profile).catch(console.error);\n      }\n\n      return true;\n\n    } catch (error) {\n      console.error('切換角色失敗:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 登出\n   */\n  static logout(): void {\n    useLocalAuthStore.getState().setCurrentProfile(null);\n    console.log('✅ 已登出');\n  }\n\n  /**\n   * 背景刷新（純本地模式 - 已停用）\n   */\n  private static async refreshSupabaseSession(profile: LocalProfile): Promise<void> {\n    console.log('📦 本地模式：無需刷新 session');\n  }\n\n  /**\n   * 判斷用戶角色\n   */\n  private static determineRole(permissions: string[]): 'SUPER_ADMIN' | 'ADMIN' | 'EMPLOYEE' {\n    if (permissions?.includes('super_admin')) return 'SUPER_ADMIN';\n    if (permissions?.includes('admin')) return 'ADMIN';\n    return 'EMPLOYEE';\n  }\n\n  /**\n   * 同步本地 Profile 與遠端\n   */\n  static async syncProfile(profileId: string): Promise<boolean> {\n    try {\n      const isOnline = useOfflineStore.getState().isOnline;\n\n      if (!isOnline) {\n        console.log('離線狀態，無法同步');\n        return false;\n      }\n\n      const profile = useLocalAuthStore.getState().getProfileById(profileId);\n\n      if (!profile) {\n        return false;\n      }\n\n      // 從遠端獲取最新資料\n      const { data: employee, error } = await supabase\n        .from('users')\n        .select('*')\n        .eq('id', profile.id)\n        .is('deleted_at', null)\n        .single();\n\n      if (error || !employee) {\n        console.error('無法同步 Profile:', error);\n        return false;\n      }\n\n      // 更新本地 Profile\n      useLocalAuthStore.getState().updateProfile(profileId, {\n        permissions: employee.permissions,\n        personalInfo: employee.personal_info,\n        jobInfo: employee.job_info,\n        salaryInfo: employee.salary_info,\n        contracts: employee.contracts,\n        attendance: employee.attendance,\n        status: employee.status,\n        lastSyncAt: new Date().toISOString()\n      });\n\n      console.log('✅ Profile 已同步');\n      return true;\n\n    } catch (error) {\n      console.error('同步失敗:', error);\n      return false;\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1098, "column": 0}, "map": {"version":3,"sources":["file:///Users/williamchien/Desktop/Venturo/venturo-new/src/stores/auth-store.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { User } from './types';\nimport { generateToken, verifyPassword, type AuthPayload } from '@/lib/auth';\nimport { useLocalAuthStore, LocalProfile } from '@/lib/auth/local-auth-manager';\nimport { OfflineAuthService } from '@/services/offline-auth.service';\n\ninterface AuthState {\n  // 保持向下相容的屬性\n  user: User | null;\n  isAuthenticated: boolean;\n  sidebarCollapsed: boolean;\n  loginAttempts: Map<string, { count: number; lastAttempt: Date }>;\n\n  // 新增屬性\n  currentProfile: LocalProfile | null;\n  isOfflineMode: boolean;\n\n  // 方法\n  login: (user: User) => void;\n  logout: () => void;\n  validateLogin: (username: string, password: string) => Promise<{ success: boolean; message?: string }>;\n  toggleSidebar: () => void;\n  setSidebarCollapsed: (collapsed: boolean) => void;\n  checkPermission: (permission: string) => boolean;\n  switchProfile: (profileId: string) => boolean;\n}\n\n// 防暴力破解的失敗記錄\nconst loginAttemptsMap = new Map<string, { count: number; lastAttempt: Date }>();\n\nfunction checkLoginAttempts(username: string): { allowed: boolean; message?: string } {\n  const attempts = loginAttemptsMap.get(username);\n\n  if (!attempts) {\n    loginAttemptsMap.set(username, { count: 1, lastAttempt: new Date() });\n    return { allowed: true };\n  }\n\n  // 15 分鐘後重置\n  const timeDiff = Date.now() - attempts.lastAttempt.getTime();\n  if (timeDiff > 15 * 60 * 1000) {\n    loginAttemptsMap.set(username, { count: 1, lastAttempt: new Date() });\n    return { allowed: true };\n  }\n\n  // 超過 5 次嘗試\n  if (attempts.count >= 5) {\n    const remainingTime = Math.ceil((15 * 60 * 1000 - timeDiff) / (60 * 1000));\n    return {\n      allowed: false,\n      message: `登入失敗次數過多，請 ${remainingTime} 分鐘後再試`\n    };\n  }\n\n  attempts.count++;\n  attempts.lastAttempt = new Date();\n  return { allowed: true };\n}\n\nfunction recordLoginAttempt(username: string, success: boolean): void {\n  if (success) {\n    // 登入成功，清除失敗記錄\n    loginAttemptsMap.delete(username);\n  }\n  // 失敗記錄已在 checkLoginAttempts 中處理\n}\n\nfunction setSecureCookie(token: string, rememberMe: boolean = false): void {\n  const maxAge = rememberMe ? 30 * 24 * 60 * 60 : 8 * 60 * 60; // 30天 or 8小時\n  const secure = window.location.protocol === 'https:' ? 'Secure; ' : '';\n\n  // 在 localhost 開發環境中，不使用 Secure 和 SameSite=Strict\n  if (window.location.hostname === 'localhost') {\n    document.cookie = `auth-token=${token}; path=/; max-age=${maxAge}; SameSite=Lax`;\n  } else {\n    document.cookie = `auth-token=${token}; path=/; max-age=${maxAge}; SameSite=Strict; ${secure}`;\n  }\n}\n\nexport const useAuthStore = create<AuthState>(\n  persist(\n    (set, get) => ({\n      user: null,\n      isAuthenticated: false,\n      sidebarCollapsed: true,\n      loginAttempts: new Map(),\n      currentProfile: null,\n      isOfflineMode: false,\n\n      login: (user) => {\n        // 同時更新 user 和 currentProfile\n        const profile = useLocalAuthStore.getState().currentProfile;\n        set({\n          user,\n          isAuthenticated: true,\n          currentProfile: profile\n        });\n      },\n\n      logout: () => {\n        // 使用離線認證服務登出\n        OfflineAuthService.logout();\n\n        // 安全清除認證 cookie\n        if (typeof window !== 'undefined') {\n          if (window.location.hostname === 'localhost') {\n            document.cookie = 'auth-token=; path=/; max-age=0; SameSite=Lax';\n          } else {\n            document.cookie = 'auth-token=; path=/; max-age=0; SameSite=Strict; Secure';\n          }\n        }\n\n        set({\n          user: null,\n          isAuthenticated: false,\n          currentProfile: null\n        });\n      },\n\n  validateLogin: async (username: string, password: string) => {\n        try {\n          // 使用離線認證服務進行初次登入\n          const result = await OfflineAuthService.initialLogin(username, password);\n\n          if (result.success && result.profile) {\n            // 建立用戶對象（向下相容）\n            const user: User = {\n              id: result.profile.id,\n              employeeNumber: result.profile.employeeNumber,\n              englishName: result.profile.englishName,\n              chineseName: result.profile.chineseName,\n              personalInfo: result.profile.personalInfo || {},\n              jobInfo: result.profile.jobInfo || {},\n              salaryInfo: result.profile.salaryInfo || {},\n              permissions: result.profile.permissions || [],\n              attendance: result.profile.attendance || { leaveRecords: [], overtimeRecords: [] },\n              contracts: result.profile.contracts || [],\n              status: result.profile.status\n            };\n\n            // 生成 JWT token\n            const authPayload: AuthPayload = {\n              id: result.profile.id,\n              employeeNumber: result.profile.employeeNumber,\n              permissions: result.profile.permissions || [],\n              role: result.profile.permissions?.includes('super_admin') ? 'super_admin' :\n                    result.profile.permissions?.includes('admin') ? 'admin' : 'employee'\n            };\n\n            const token = generateToken(authPayload);\n\n            // 設定安全 cookie\n            setSecureCookie(token, false);\n\n            set({\n              user,\n              isAuthenticated: true,\n              currentProfile: result.profile\n            });\n\n            return { success: true };\n          }\n\n          return { success: false, message: result.message || '登入失敗' };\n\n        } catch (error) {\n          console.error('💥 登入驗證錯誤:', error);\n          return { success: false, message: '系統錯誤，請稍後再試' };\n        }\n      },\n\n      checkPermission: (permission: string) => {\n        const profile = get().currentProfile;\n        if (!profile) return false;\n        return profile.permissions.includes(permission) ||\n               profile.permissions.includes('super_admin') ||\n               profile.permissions.includes('admin');\n      },\n\n      switchProfile: (profileId: string) => {\n        const success = OfflineAuthService.switchProfile(profileId);\n        if (success) {\n          const profile = useLocalAuthStore.getState().getProfileById(profileId);\n          if (profile) {\n            const user: User = {\n              id: profile.id,\n              employeeNumber: profile.employeeNumber,\n              englishName: profile.englishName,\n              chineseName: profile.chineseName,\n              personalInfo: profile.personalInfo || {},\n              jobInfo: profile.jobInfo || {},\n              salaryInfo: profile.salaryInfo || {},\n              permissions: profile.permissions || [],\n              attendance: profile.attendance || { leaveRecords: [], overtimeRecords: [] },\n              contracts: profile.contracts || [],\n              status: profile.status\n            };\n\n            set({\n              currentProfile: profile,\n              user,\n              isAuthenticated: true\n            });\n          }\n        }\n        return success;\n      },\n\n      toggleSidebar: () => set((state) => ({ sidebarCollapsed: !state.sidebarCollapsed })),\n      setSidebarCollapsed: (collapsed) => set({ sidebarCollapsed: collapsed }),\n    }),\n    {\n      name: 'auth-storage',\n      skipHydration: true, // 🔥 避免 SSR 時讀取 localStorage\n      partialize: (state) => ({\n        user: state.user,\n        isAuthenticated: state.isAuthenticated,\n        currentProfile: state.currentProfile,\n        sidebarCollapsed: state.sidebarCollapsed,\n        isOfflineMode: state.isOfflineMode\n      })\n    }\n  )\n);"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1322, "column": 0}, "map": {"version":3,"sources":["file:///Users/williamchien/Desktop/Venturo/venturo-new/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\nimport { format } from \"date-fns\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function generateTourCode(location: string, date: Date, isSpecial = false): string {\n  if (isSpecial) {\n    const dateStr = format(date, 'yyMMdd')\n    return `SPC${dateStr}01`\n  }\n\n  const locationCodes: Record<string, string> = {\n    'Tokyo': 'TYO',\n    'Okinawa': 'OKA',\n    'Osaka': 'OSA',\n    'Kyoto': 'KYO',\n    'Hokkaido': 'HOK',\n  }\n\n  const locationCode = locationCodes[location] || 'UNK'\n  const dateStr = format(date, 'yyMMdd')\n  const sequence = '01' // 實際應該從資料庫查詢當天同地點已有數量\n\n  return `${locationCode}${dateStr}${sequence}`\n}\n\n// 根據身分證字號判斷性別 (僅台灣身分證字號)\nexport function getGenderFromIdNumber(idNumber: string): 'M' | 'F' | '' {\n  if (!idNumber) return '';\n\n  // 檢查是否為台灣身分證字號格式\n  if (!validateIdNumber(idNumber)) {\n    // 非台灣身分證字號，跳出通知\n    if (typeof window !== 'undefined' && idNumber.length > 0) {\n      alert('此身分證字號格式不符合台灣身分證系統，請手動輸入性別');\n    }\n    return '';\n  }\n\n  const secondDigit = idNumber.charAt(1);\n  // 第二碼為1表示男性，2表示女性\n  if (secondDigit === '1') {\n    return 'M';\n  } else if (secondDigit === '2') {\n    return 'F';\n  }\n  return '';\n}\n\n// 根據生日和回團日期計算年齡\nexport function calculateAge(birthday: string, departureDate: string, returnDate?: string): number {\n  if (!birthday || !departureDate) return 0;\n\n  const birthDate = new Date(birthday);\n  // 優先使用回團日期，如果沒有則使用出發日期\n  const referenceDate = returnDate ? new Date(returnDate) : new Date(departureDate);\n\n  let age = referenceDate.getFullYear() - birthDate.getFullYear();\n  const monthDiff = referenceDate.getMonth() - birthDate.getMonth();\n\n  // 如果還沒到生日，年齡減1\n  if (monthDiff < 0 || (monthDiff === 0 && referenceDate.getDate() < birthDate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n\n// 驗證身分證字號格式\nexport function validateIdNumber(idNumber: string): boolean {\n  if (!idNumber) return false;\n\n  // 台灣身分證格式：英文字母 + 9位數字\n  const pattern = /^[A-Z]\\d{9}$/;\n  return pattern.test(idNumber);\n}\n\n// 驗證護照號碼格式\nexport function validatePassportNumber(passportNumber: string): boolean {\n  if (!passportNumber) return false;\n\n  // 台灣護照格式：數字 + 英文字母，總長8-9位\n  const pattern = /^[0-9]{8,9}$|^[A-Z0-9]{8,9}$/;\n  return pattern.test(passportNumber);\n}"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB;AAEO,SAAS,iBAAiB,QAAgB,EAAE,IAAU,EAAE,YAAY,KAAK;IAC9E,IAAI,WAAW;QACb,MAAM,UAAU,IAAA,+JAAM,EAAC,MAAM;QAC7B,OAAO,CAAC,GAAG,EAAE,QAAQ,EAAE,CAAC;IAC1B;IAEA,MAAM,gBAAwC;QAC5C,SAAS;QACT,WAAW;QACX,SAAS;QACT,SAAS;QACT,YAAY;IACd;IAEA,MAAM,eAAe,aAAa,CAAC,SAAS,IAAI;IAChD,MAAM,UAAU,IAAA,+JAAM,EAAC,MAAM;IAC7B,MAAM,WAAW,KAAK,sBAAsB;;IAE5C,OAAO,GAAG,eAAe,UAAU,UAAU;AAC/C;AAGO,SAAS,sBAAsB,QAAgB;IACpD,IAAI,CAAC,UAAU,OAAO;IAEtB,iBAAiB;IACjB,IAAI,CAAC,iBAAiB,WAAW;QAC/B,gBAAgB;QAChB,IAAI,gBAAkB,eAAe,SAAS,MAAM,GAAG;;QAGvD,OAAO;IACT;IAEA,MAAM,cAAc,SAAS,MAAM,CAAC;IACpC,kBAAkB;IAClB,IAAI,gBAAgB,KAAK;QACvB,OAAO;IACT,OAAO,IAAI,gBAAgB,KAAK;QAC9B,OAAO;IACT;IACA,OAAO;AACT;AAGO,SAAS,aAAa,QAAgB,EAAE,aAAqB,EAAE,UAAmB;IACvF,IAAI,CAAC,YAAY,CAAC,eAAe,OAAO;IAExC,MAAM,YAAY,IAAI,KAAK;IAC3B,uBAAuB;IACvB,MAAM,gBAAgB,aAAa,IAAI,KAAK,cAAc,IAAI,KAAK;IAEnE,IAAI,MAAM,cAAc,WAAW,KAAK,UAAU,WAAW;IAC7D,MAAM,YAAY,cAAc,QAAQ,KAAK,UAAU,QAAQ;IAE/D,eAAe;IACf,IAAI,YAAY,KAAM,cAAc,KAAK,cAAc,OAAO,KAAK,UAAU,OAAO,IAAK;QACvF;IACF;IAEA,OAAO;AACT;AAGO,SAAS,iBAAiB,QAAgB;IAC/C,IAAI,CAAC,UAAU,OAAO;IAEtB,sBAAsB;IACtB,MAAM,UAAU;IAChB,OAAO,QAAQ,IAAI,CAAC;AACtB;AAGO,SAAS,uBAAuB,cAAsB;IAC3D,IAAI,CAAC,gBAAgB,OAAO;IAE5B,0BAA0B;IAC1B,MAAM,UAAU;IAChB,OAAO,QAAQ,IAAI,CAAC;AACtB","debugId":null}},
    {"offset": {"line": 1410, "column": 0}, "map": {"version":3,"sources":["file:///Users/williamchien/Desktop/Venturo/venturo-new/src/lib/offline/unified-types.ts"],"sourcesContent":["/**\n * 🎯 Venturo v4.0 - 統一資料模型\n *\n * 規範：\n * - 前端統一使用 camelCase\n * - Supabase 使用 snake_case\n * - 所有轉換在此檔案統一處理\n */\n\n// ===========================\n// 核心基礎類型\n// ===========================\n\n/** 時間戳記 */\nexport interface Timestamps {\n  createdAt: string;\n  updatedAt: string;\n}\n\n/** 資料同步狀態 */\nexport interface SyncMetadata {\n  /** 本地唯一 ID (UUID) */\n  id: string;\n  /** 是否已同步到 Supabase */\n  synced: boolean;\n  /** 最後同步時間 */\n  lastSyncedAt?: string;\n  /** 同步失敗原因 */\n  syncError?: string;\n  /** 資料版本號 (用於衝突偵測) */\n  version: number;\n}\n\n// ===========================\n// 團體資料模型\n// ===========================\n\nexport interface Tour extends Timestamps, SyncMetadata {\n  /** 團號 (注意：使用 code 不是 tourCode) */\n  code: string;\n  name: string;\n  destination: string;\n  startDate: string;\n  endDate: string;\n  days: number;\n  nights: number;\n  adultCount: number;\n  childCount: number;\n  infantCount: number;\n  status: 'planning' | 'confirmed' | 'completed' | 'cancelled';\n  totalCost: number;\n  totalRevenue: number;\n  profitMargin: number;\n  leadGuide?: string;\n  notes?: string;\n}\n\n// ===========================\n// 訂單資料模型\n// ===========================\n\nexport interface Order extends Timestamps, SyncMetadata {\n  orderNumber: string;\n  tourId: string;\n  customerId: string;\n  customerName: string;\n  customerPhone: string;\n  customerEmail?: string;\n  adultCount: number;\n  childCount: number;\n  infantCount: number;\n  totalAmount: number;\n  paidAmount: number;\n  status: 'pending' | 'confirmed' | 'paid' | 'cancelled';\n  paymentMethod?: 'cash' | 'transfer' | 'credit_card';\n  notes?: string;\n}\n\n// ===========================\n// 報價單資料模型\n// ===========================\n\nexport interface Quote extends Timestamps, SyncMetadata {\n  quoteNumber: string;\n  customerId?: string;\n  customerName: string;\n  customerEmail?: string;\n  customerPhone?: string;\n  destination: string;\n  startDate: string;\n  endDate: string;\n  days: number;\n  adultCount: number;\n  childCount: number;\n  infantCount: number;\n  totalCost: number;\n  profitMargin: number;\n  sellingPrice: number;\n  status: 'draft' | 'sent' | 'accepted' | 'rejected' | 'expired';\n  validUntil: string;\n  notes?: string;\n}\n\n// ===========================\n// 請款單資料模型\n// ===========================\n\nexport interface PaymentRequest extends Timestamps, SyncMetadata {\n  requestNumber: string;\n  tourId?: string;\n  supplierId?: string;\n  supplierName: string;\n  category: 'accommodation' | 'transport' | 'meals' | 'tickets' | 'guide' | 'other';\n  description: string;\n  amount: number;\n  dueDate: string;\n  status: 'pending' | 'processing' | 'approved' | 'paid' | 'rejected';\n  approvedBy?: string;\n  approvedAt?: string;\n  paidAt?: string;\n  paymentMethod?: 'cash' | 'transfer' | 'cheque';\n  receiptUrl?: string;\n  notes?: string;\n}\n\n// ===========================\n// 待辦事項資料模型\n// ===========================\n\nexport interface Todo extends Timestamps, SyncMetadata {\n  title: string;\n  description?: string;\n  priority: 1 | 2 | 3 | 4 | 5;\n  deadline?: string;\n  completed: boolean;\n  completedAt?: string;\n  assigneeId?: string;\n  assigneeName?: string;\n  relatedType?: 'tour' | 'order' | 'quote' | 'payment';\n  relatedId?: string;\n  tags?: string[];\n}\n\n// ===========================\n// 供應商資料模型\n// ===========================\n\nexport interface Supplier extends Timestamps, SyncMetadata {\n  name: string;\n  category: 'hotel' | 'restaurant' | 'transport' | 'attraction' | 'insurance' | 'other';\n  contactPerson: string;\n  phone: string;\n  email?: string;\n  address?: string;\n  website?: string;\n  taxId?: string;\n  bankAccount?: string;\n  paymentTerms?: string;\n  rating?: number;\n  status: 'active' | 'inactive' | 'suspended';\n  notes?: string;\n}\n\n// ===========================\n// 客戶資料模型\n// ===========================\n\nexport interface Customer extends Timestamps, SyncMetadata {\n  name: string;\n  phone: string;\n  email?: string;\n  idNumber?: string;\n  birthday?: string;\n  address?: string;\n  emergencyContact?: {\n    name: string;\n    relationship: string;\n    phone: string;\n  };\n  vipLevel?: number;\n  totalOrders?: number;\n  totalSpent?: number;\n  source?: 'website' | 'referral' | 'ads' | 'walk_in' | 'other';\n  notes?: string;\n}\n\n// ===========================\n// Supabase ↔ Frontend 轉換器\n// ===========================\n\n/** Supabase 資料庫格式 (snake_case) */\nexport type SupabaseRow<T> = {\n  [K in keyof T as K extends string\n    ? (K extends 'createdAt' ? 'created_at' :\n       K extends 'updatedAt' ? 'updated_at' :\n       K extends 'syncedAt' ? 'synced_at' :\n       K extends 'lastSyncedAt' ? 'last_synced_at' :\n       K extends 'syncError' ? 'sync_error' :\n       K extends 'tourId' ? 'tour_id' :\n       K extends 'customerId' ? 'customer_id' :\n       K extends 'supplierId' ? 'supplier_id' :\n       K extends 'customerName' ? 'customer_name' :\n       K extends 'customerPhone' ? 'customer_phone' :\n       K extends 'customerEmail' ? 'customer_email' :\n       K extends 'supplierName' ? 'supplier_name' :\n       K extends 'adultCount' ? 'adult_count' :\n       K extends 'childCount' ? 'child_count' :\n       K extends 'infantCount' ? 'infant_count' :\n       K extends 'totalAmount' ? 'total_amount' :\n       K extends 'totalCost' ? 'total_cost' :\n       K extends 'totalRevenue' ? 'total_revenue' :\n       K extends 'totalOrders' ? 'total_orders' :\n       K extends 'totalSpent' ? 'total_spent' :\n       K extends 'paidAmount' ? 'paid_amount' :\n       K extends 'profitMargin' ? 'profit_margin' :\n       K extends 'sellingPrice' ? 'selling_price' :\n       K extends 'orderNumber' ? 'order_number' :\n       K extends 'quoteNumber' ? 'quote_number' :\n       K extends 'requestNumber' ? 'request_number' :\n       K extends 'startDate' ? 'start_date' :\n       K extends 'endDate' ? 'end_date' :\n       K extends 'dueDate' ? 'due_date' :\n       K extends 'validUntil' ? 'valid_until' :\n       K extends 'completedAt' ? 'completed_at' :\n       K extends 'approvedBy' ? 'approved_by' :\n       K extends 'approvedAt' ? 'approved_at' :\n       K extends 'paidAt' ? 'paid_at' :\n       K extends 'paymentMethod' ? 'payment_method' :\n       K extends 'receiptUrl' ? 'receipt_url' :\n       K extends 'leadGuide' ? 'lead_guide' :\n       K extends 'contactPerson' ? 'contact_person' :\n       K extends 'taxId' ? 'tax_id' :\n       K extends 'bankAccount' ? 'bank_account' :\n       K extends 'paymentTerms' ? 'payment_terms' :\n       K extends 'idNumber' ? 'id_number' :\n       K extends 'emergencyContact' ? 'emergency_contact' :\n       K extends 'vipLevel' ? 'vip_level' :\n       K extends 'assigneeId' ? 'assignee_id' :\n       K extends 'assigneeName' ? 'assignee_name' :\n       K extends 'relatedType' ? 'related_type' :\n       K extends 'relatedId' ? 'related_id' :\n       string)\n    : never]: T[K];\n};\n\n/** Frontend → Supabase 轉換 */\nexport function toSupabase<T extends Record<string, any>>(data: T): SupabaseRow<T> {\n  const result: any = {};\n\n  for (const [key, value] of Object.entries(data)) {\n    // 轉換 key 為 snake_case\n    const snakeKey = key.replace(/([A-Z])/g, '_$1').toLowerCase();\n    result[snakeKey] = value;\n  }\n\n  return result;\n}\n\n/** Supabase → Frontend 轉換 */\nexport function fromSupabase<T>(data: any): T {\n  const result: any = {};\n\n  for (const [key, value] of Object.entries(data)) {\n    // 轉換 key 為 camelCase\n    const camelKey = key.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());\n    result[camelKey] = value;\n  }\n\n  return result as T;\n}\n\n/** 批次轉換：Frontend → Supabase */\nexport function toSupabaseBatch<T extends Record<string, any>>(data: T[]): SupabaseRow<T>[] {\n  return data.map(item => toSupabase(item));\n}\n\n/** 批次轉換：Supabase → Frontend */\nexport function fromSupabaseBatch<T>(data: any[]): T[] {\n  return data.map(item => fromSupabase<T>(item));\n}\n\n// ===========================\n// 資料驗證\n// ===========================\n\n/** 驗證必填欄位 */\nexport function validateRequired<T>(data: Partial<T>, requiredFields: (keyof T)[]): string[] {\n  const errors: string[] = [];\n\n  for (const field of requiredFields) {\n    if (data[field] === undefined || data[field] === null || data[field] === '') {\n      errors.push(`${String(field)} 為必填欄位`);\n    }\n  }\n\n  return errors;\n}\n\n/** 驗證 Email 格式 */\nexport function validateEmail(email?: string): boolean {\n  if (!email) return true; // optional field\n  return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n}\n\n/** 驗證手機格式 (台灣) */\nexport function validatePhone(phone: string): boolean {\n  return /^09\\d{8}$/.test(phone.replace(/[-\\s]/g, ''));\n}\n\n/** 驗證日期格式 */\nexport function validateDate(date: string): boolean {\n  return /^\\d{4}-\\d{2}-\\d{2}$/.test(date) && !isNaN(Date.parse(date));\n}\n\n// ===========================\n// UUID 生成\n// ===========================\n\n/** 生成本地 UUID */\nexport function generateUUID(): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/** 生成帶前綴的 ID */\nexport function generatePrefixedId(prefix: string): string {\n  const timestamp = Date.now().toString(36);\n  const random = Math.random().toString(36).substring(2, 7);\n  return `${prefix}-${timestamp}-${random}`;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC,GAED,8BAA8B;AAC9B,SAAS;AACT,8BAA8B;AAE9B,SAAS;;;;;;;;;;;;;;;;;;;;;;AAyOF,SAAS,WAA0C,IAAO;IAC/D,MAAM,SAAc,CAAC;IAErB,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,MAAO;QAC/C,sBAAsB;QACtB,MAAM,WAAW,IAAI,OAAO,CAAC,YAAY,OAAO,WAAW;QAC3D,MAAM,CAAC,SAAS,GAAG;IACrB;IAEA,OAAO;AACT;AAGO,SAAS,aAAgB,IAAS;IACvC,MAAM,SAAc,CAAC;IAErB,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,MAAO;QAC/C,qBAAqB;QACrB,MAAM,WAAW,IAAI,OAAO,CAAC,aAAa,CAAC,GAAG,SAAW,OAAO,WAAW;QAC3E,MAAM,CAAC,SAAS,GAAG;IACrB;IAEA,OAAO;AACT;AAGO,SAAS,gBAA+C,IAAS;IACtE,OAAO,KAAK,GAAG,CAAC,CAAA,OAAQ,WAAW;AACrC;AAGO,SAAS,kBAAqB,IAAW;IAC9C,OAAO,KAAK,GAAG,CAAC,CAAA,OAAQ,aAAgB;AAC1C;AAOO,SAAS,iBAAoB,IAAgB,EAAE,cAA2B;IAC/E,MAAM,SAAmB,EAAE;IAE3B,KAAK,MAAM,SAAS,eAAgB;QAClC,IAAI,IAAI,CAAC,MAAM,KAAK,aAAa,IAAI,CAAC,MAAM,KAAK,QAAQ,IAAI,CAAC,MAAM,KAAK,IAAI;YAC3E,OAAO,IAAI,CAAC,GAAG,OAAO,OAAO,MAAM,CAAC;QACtC;IACF;IAEA,OAAO;AACT;AAGO,SAAS,cAAc,KAAc;IAC1C,IAAI,CAAC,OAAO,OAAO,MAAM,iBAAiB;IAC1C,OAAO,6BAA6B,IAAI,CAAC;AAC3C;AAGO,SAAS,cAAc,KAAa;IACzC,OAAO,YAAY,IAAI,CAAC,MAAM,OAAO,CAAC,UAAU;AAClD;AAGO,SAAS,aAAa,IAAY;IACvC,OAAO,sBAAsB,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,KAAK,CAAC;AAC/D;AAOO,SAAS;IACd,OAAO,uCAAuC,OAAO,CAAC,SAAS,CAAC;QAC9D,MAAM,IAAI,AAAC,KAAK,MAAM,KAAK,KAAM;QACjC,MAAM,IAAI,MAAM,MAAM,IAAI,AAAC,IAAI,MAAO;QACtC,OAAO,EAAE,QAAQ,CAAC;IACpB;AACF;AAGO,SAAS,mBAAmB,MAAc;IAC/C,MAAM,YAAY,KAAK,GAAG,GAAG,QAAQ,CAAC;IACtC,MAAM,SAAS,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG;IACvD,OAAO,GAAG,OAAO,CAAC,EAAE,UAAU,CAAC,EAAE,QAAQ;AAC3C","debugId":null}},
    {"offset": {"line": 1501, "column": 0}, "map": {"version":3,"sources":["file:///Users/williamchien/Desktop/Venturo/venturo-new/src/lib/offline/offline-database.ts"],"sourcesContent":["/**\n * 🗄️ Venturo v4.0 - IndexedDB 離線資料庫封裝\n *\n * 功能：\n * - 封裝 IndexedDB 操作\n * - 提供 CRUD 介面\n * - 支援批次操作\n * - 自動索引管理\n */\n\nimport { generateUUID } from './unified-types';\n\n// ===========================\n// 資料庫配置\n// ===========================\n\nexport const DB_CONFIG = {\n  name: 'VenturoOfflineDB',\n  version: 1,\n  stores: {\n    tours: {\n      keyPath: 'id',\n      indexes: ['code', 'status', 'startDate', 'synced']\n    },\n    orders: {\n      keyPath: 'id',\n      indexes: ['orderNumber', 'tourId', 'customerId', 'status', 'synced']\n    },\n    quotes: {\n      keyPath: 'id',\n      indexes: ['quoteNumber', 'customerId', 'status', 'synced']\n    },\n    paymentRequests: {\n      keyPath: 'id',\n      indexes: ['requestNumber', 'tourId', 'supplierId', 'status', 'synced']\n    },\n    todos: {\n      keyPath: 'id',\n      indexes: ['priority', 'completed', 'assigneeId', 'synced']\n    },\n    suppliers: {\n      keyPath: 'id',\n      indexes: ['name', 'category', 'status', 'synced']\n    },\n    customers: {\n      keyPath: 'id',\n      indexes: ['name', 'phone', 'email', 'synced']\n    },\n    syncQueue: {\n      keyPath: 'id',\n      indexes: ['operation', 'tableName', 'createdAt', 'status']\n    }\n  }\n} as const;\n\n// Export StoreName type\nexport type StoreName = keyof typeof DB_CONFIG.stores;\n\n// ===========================\n// IndexedDB 封裝類別\n// ===========================\n\nexport class OfflineDatabase {\n  private db: IDBDatabase | null = null;\n  private initPromise: Promise<void> | null = null;\n\n  constructor() {\n    this.initPromise = this.init();\n  }\n\n  /**\n   * 初始化資料庫\n   */\n  private async init(): Promise<void> {\n    // 檢查是否在瀏覽器環境\n    if (typeof window === 'undefined' || typeof indexedDB === 'undefined') {\n      console.warn('⚠️ IndexedDB 不可用（非瀏覽器環境）')\n      return Promise.resolve()\n    }\n\n    return new Promise((resolve, reject) => {\n      const request = indexedDB.open(DB_CONFIG.name, DB_CONFIG.version);\n\n      request.onerror = () => {\n        console.error('❌ IndexedDB 初始化失敗:', request.error);\n        reject(request.error);\n      };\n\n      request.onsuccess = () => {\n        this.db = request.result;\n        console.log('✅ IndexedDB 初始化成功');\n        resolve();\n      };\n\n      request.onupgradeneeded = (event) => {\n        const db = (event.target as IDBOpenDBRequest).result;\n\n        // 建立所有 Object Stores 和索引\n        Object.entries(DB_CONFIG.stores).forEach(([storeName, config]) => {\n          if (!db.objectStoreNames.contains(storeName)) {\n            const objectStore = db.createObjectStore(storeName, {\n              keyPath: config.keyPath,\n              autoIncrement: false\n            });\n\n            // 建立索引\n            config.indexes.forEach(indexName => {\n              objectStore.createIndex(indexName, indexName, { unique: false });\n            });\n\n            console.log(`✅ 建立 ObjectStore: ${storeName}`);\n          }\n        });\n      };\n    });\n  }\n\n  /**\n   * 確保資料庫已初始化\n   */\n  private async ensureDB(): Promise<IDBDatabase> {\n    if (!this.db) {\n      await this.initPromise;\n    }\n    if (!this.db) {\n      throw new Error('資料庫未初始化');\n    }\n    return this.db;\n  }\n\n  /**\n   * 新增資料\n   */\n  async add<T extends { id: string }>(storeName: StoreName, data: T): Promise<T> {\n    const db = await this.ensureDB();\n\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction(storeName, 'readwrite');\n      const objectStore = transaction.objectStore(storeName);\n\n      // 確保有 ID\n      if (!data.id) {\n        data.id = generateUUID();\n      }\n\n      const request = objectStore.add(data);\n\n      request.onsuccess = () => {\n        console.log(`✅ 新增資料到 ${storeName}:`, data.id);\n        resolve(data);\n      };\n\n      request.onerror = () => {\n        console.error(`❌ 新增資料失敗:`, request.error);\n        reject(request.error);\n      };\n    });\n  }\n\n  /**\n   * 更新資料\n   */\n  async update<T extends { id: string }>(storeName: StoreName, data: T): Promise<T> {\n    const db = await this.ensureDB();\n\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction(storeName, 'readwrite');\n      const objectStore = transaction.objectStore(storeName);\n      const request = objectStore.put(data);\n\n      request.onsuccess = () => {\n        console.log(`✅ 更新資料 ${storeName}:`, data.id);\n        resolve(data);\n      };\n\n      request.onerror = () => {\n        console.error(`❌ 更新資料失敗:`, request.error);\n        reject(request.error);\n      };\n    });\n  }\n\n  /**\n   * 刪除資料\n   */\n  async delete(storeName: StoreName, id: string): Promise<void> {\n    const db = await this.ensureDB();\n\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction(storeName, 'readwrite');\n      const objectStore = transaction.objectStore(storeName);\n      const request = objectStore.delete(id);\n\n      request.onsuccess = () => {\n        console.log(`✅ 刪除資料 ${storeName}:`, id);\n        resolve();\n      };\n\n      request.onerror = () => {\n        console.error(`❌ 刪除資料失敗:`, request.error);\n        reject(request.error);\n      };\n    });\n  }\n\n  /**\n   * 取得單筆資料\n   */\n  async get<T>(storeName: StoreName, id: string): Promise<T | null> {\n    const db = await this.ensureDB();\n\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction(storeName, 'readonly');\n      const objectStore = transaction.objectStore(storeName);\n      const request = objectStore.get(id);\n\n      request.onsuccess = () => {\n        resolve(request.result || null);\n      };\n\n      request.onerror = () => {\n        console.error(`❌ 讀取資料失敗:`, request.error);\n        reject(request.error);\n      };\n    });\n  }\n\n  /**\n   * 取得所有資料\n   */\n  async getAll<T>(storeName: StoreName): Promise<T[]> {\n    const db = await this.ensureDB();\n\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction(storeName, 'readonly');\n      const objectStore = transaction.objectStore(storeName);\n      const request = objectStore.getAll();\n\n      request.onsuccess = () => {\n        resolve(request.result || []);\n      };\n\n      request.onerror = () => {\n        console.error(`❌ 讀取所有資料失敗:`, request.error);\n        reject(request.error);\n      };\n    });\n  }\n\n  /**\n   * 使用索引查詢\n   */\n  async getByIndex<T>(\n    storeName: StoreName,\n    indexName: string,\n    value: any\n  ): Promise<T[]> {\n    const db = await this.ensureDB();\n\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction(storeName, 'readonly');\n      const objectStore = transaction.objectStore(storeName);\n      const index = objectStore.index(indexName);\n      const request = index.getAll(value);\n\n      request.onsuccess = () => {\n        resolve(request.result || []);\n      };\n\n      request.onerror = () => {\n        console.error(`❌ 索引查詢失敗:`, request.error);\n        reject(request.error);\n      };\n    });\n  }\n\n  /**\n   * 批次新增\n   */\n  async addBatch<T extends { id: string }>(\n    storeName: StoreName,\n    data: T[]\n  ): Promise<T[]> {\n    const db = await this.ensureDB();\n\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction(storeName, 'readwrite');\n      const objectStore = transaction.objectStore(storeName);\n      const results: T[] = [];\n\n      transaction.oncomplete = () => {\n        console.log(`✅ 批次新增 ${data.length} 筆資料到 ${storeName}`);\n        resolve(results);\n      };\n\n      transaction.onerror = () => {\n        console.error(`❌ 批次新增失敗:`, transaction.error);\n        reject(transaction.error);\n      };\n\n      data.forEach(item => {\n        if (!item.id) {\n          item.id = generateUUID();\n        }\n        objectStore.add(item);\n        results.push(item);\n      });\n    });\n  }\n\n  /**\n   * 清空 Store\n   */\n  async clear(storeName: StoreName): Promise<void> {\n    const db = await this.ensureDB();\n\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction(storeName, 'readwrite');\n      const objectStore = transaction.objectStore(storeName);\n      const request = objectStore.clear();\n\n      request.onsuccess = () => {\n        console.log(`✅ 清空 ${storeName}`);\n        resolve();\n      };\n\n      request.onerror = () => {\n        console.error(`❌ 清空失敗:`, request.error);\n        reject(request.error);\n      };\n    });\n  }\n\n  /**\n   * 取得資料數量\n   */\n  async count(storeName: StoreName): Promise<number> {\n    const db = await this.ensureDB();\n\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction(storeName, 'readonly');\n      const objectStore = transaction.objectStore(storeName);\n      const request = objectStore.count();\n\n      request.onsuccess = () => {\n        resolve(request.result);\n      };\n\n      request.onerror = () => {\n        console.error(`❌ 計數失敗:`, request.error);\n        reject(request.error);\n      };\n    });\n  }\n\n  /**\n   * 查詢未同步的資料\n   */\n  async getUnsyncedData<T>(storeName: StoreName): Promise<T[]> {\n    return this.getByIndex<T>(storeName, 'synced', false);\n  }\n\n  /**\n   * 標記為已同步\n   */\n  async markAsSynced(storeName: StoreName, id: string): Promise<void> {\n    const data = await this.get<any>(storeName, id);\n    if (data) {\n      data.synced = true;\n      data.lastSyncedAt = new Date().toISOString();\n      await this.update(storeName, data);\n    }\n  }\n\n  /**\n   * 關閉資料庫連接\n   */\n  close(): void {\n    if (this.db) {\n      this.db.close();\n      this.db = null;\n      console.log('✅ IndexedDB 連接已關閉');\n    }\n  }\n}\n\n// ===========================\n// 單例模式\n// ===========================\n\nlet dbInstance: OfflineDatabase | null = null;\n\nexport function getOfflineDB(): OfflineDatabase {\n  if (!dbInstance) {\n    dbInstance = new OfflineDatabase();\n  }\n  return dbInstance;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1836, "column": 0}, "map": {"version":3,"sources":["file:///Users/williamchien/Desktop/Venturo/venturo-new/src/lib/offline/offline-manager.ts"],"sourcesContent":["/**\n * 🎯 Venturo v4.0 - 離線管理器\n *\n * 核心功能：\n * - 統一管理 localStorage + IndexedDB\n * - 自動選擇最佳儲存方案\n * - 管理同步佇列\n * - 提供統一的 CRUD 介面\n */\n\nimport { getOfflineDB } from './offline-database';\nimport type { StoreName } from './offline-database';\nimport { generateUUID, toSupabase, fromSupabase } from './unified-types';\n\n// Re-export StoreName for convenience\nexport type { StoreName } from './offline-database';\n\n// ===========================\n// 同步佇列項目\n// ===========================\n\nexport interface SyncQueueItem {\n  id: string;\n  operation: 'create' | 'update' | 'delete';\n  tableName: StoreName;\n  recordId: string;\n  data?: any;\n  createdAt: string;\n  status: 'pending' | 'processing' | 'completed' | 'failed';\n  retryCount: number;\n  error?: string;\n}\n\n// ===========================\n// 離線管理器類別\n// ===========================\n\nexport class OfflineManager {\n  private db = getOfflineDB();\n  private localStorage = typeof window !== 'undefined' ? window.localStorage : null;\n\n  /**\n   * 建立資料 (新增)\n   */\n  async create<T extends Record<string, any>>(\n    storeName: StoreName,\n    data: Partial<T>\n  ): Promise<T> {\n    const now = new Date().toISOString();\n    const record: any = {\n      ...data,\n      id: generateUUID(),\n      createdAt: now,\n      updatedAt: now,\n      synced: false,\n      lastSyncedAt: undefined,\n      syncError: undefined,\n      version: 1\n    };\n\n    // 儲存到 IndexedDB\n    await this.db.add(storeName, record);\n\n    // 加入同步佇列\n    await this.addToSyncQueue('create', storeName, record.id, record);\n\n    console.log(`✅ 建立資料:`, storeName, record.id);\n    return record as T;\n  }\n\n  /**\n   * 更新資料\n   */\n  async update<T extends Record<string, any>>(\n    storeName: StoreName,\n    id: string,\n    updates: Partial<T>\n  ): Promise<T> {\n    // 讀取現有資料\n    const existing = await this.db.get<any>(storeName, id);\n    if (!existing) {\n      throw new Error(`找不到資料: ${id}`);\n    }\n\n    // 合併更新\n    const updated: any = {\n      ...existing,\n      ...updates,\n      updatedAt: new Date().toISOString(),\n      synced: false,\n      version: (existing.version || 1) + 1\n    };\n\n    // 儲存到 IndexedDB\n    await this.db.update(storeName, updated);\n\n    // 加入同步佇列\n    await this.addToSyncQueue('update', storeName, id, updated);\n\n    console.log(`✅ 更新資料:`, storeName, id);\n    return updated as T;\n  }\n\n  /**\n   * 刪除資料\n   */\n  async delete(storeName: StoreName, id: string): Promise<void> {\n    // 從 IndexedDB 刪除\n    await this.db.delete(storeName, id);\n\n    // 加入同步佇列\n    await this.addToSyncQueue('delete', storeName, id);\n\n    console.log(`✅ 刪除資料:`, storeName, id);\n  }\n\n  /**\n   * 讀取單筆資料\n   */\n  async get<T>(storeName: StoreName, id: string): Promise<T | null> {\n    return await this.db.get<T>(storeName, id);\n  }\n\n  /**\n   * 讀取所有資料\n   */\n  async getAll<T>(storeName: StoreName): Promise<T[]> {\n    return await this.db.getAll<T>(storeName);\n  }\n\n  /**\n   * 使用索引查詢\n   */\n  async getByIndex<T>(\n    storeName: StoreName,\n    indexName: string,\n    value: any\n  ): Promise<T[]> {\n    return await this.db.getByIndex<T>(storeName, indexName, value);\n  }\n\n  /**\n   * 批次建立\n   */\n  async createBatch<T extends Record<string, any>>(\n    storeName: StoreName,\n    dataList: Partial<T>[]\n  ): Promise<T[]> {\n    const now = new Date().toISOString();\n    const records: any[] = dataList.map(data => ({\n      ...data,\n      id: generateUUID(),\n      createdAt: now,\n      updatedAt: now,\n      synced: false,\n      version: 1\n    }));\n\n    // 批次儲存到 IndexedDB\n    await this.db.addBatch(storeName, records);\n\n    // 批次加入同步佇列\n    for (const record of records) {\n      await this.addToSyncQueue('create', storeName, record.id, record);\n    }\n\n    console.log(`✅ 批次建立 ${records.length} 筆資料:`, storeName);\n    return records as T[];\n  }\n\n  /**\n   * 清空 Store\n   */\n  async clear(storeName: StoreName): Promise<void> {\n    await this.db.clear(storeName);\n    console.log(`✅ 清空:`, storeName);\n  }\n\n  /**\n   * 取得資料數量\n   */\n  async count(storeName: StoreName): Promise<number> {\n    return await this.db.count(storeName);\n  }\n\n  // ===========================\n  // 同步佇列管理\n  // ===========================\n\n  /**\n   * 加入同步佇列\n   */\n  private async addToSyncQueue(\n    operation: SyncQueueItem['operation'],\n    tableName: StoreName,\n    recordId: string,\n    data?: any\n  ): Promise<void> {\n    const queueItem: SyncQueueItem = {\n      id: generateUUID(),\n      operation,\n      tableName,\n      recordId,\n      data,\n      createdAt: new Date().toISOString(),\n      status: 'pending',\n      retryCount: 0\n    };\n\n    await this.db.add('syncQueue', queueItem);\n    console.log(`📤 加入同步佇列:`, operation, tableName, recordId);\n  }\n\n  /**\n   * 取得待同步項目\n   */\n  async getPendingSyncItems(): Promise<SyncQueueItem[]> {\n    return await this.db.getByIndex<SyncQueueItem>('syncQueue', 'status', 'pending');\n  }\n\n  /**\n   * 標記同步項目為完成\n   */\n  async markSyncCompleted(queueItemId: string): Promise<void> {\n    const item = await this.db.get<SyncQueueItem>('syncQueue', queueItemId);\n    if (item) {\n      item.status = 'completed';\n      await this.db.update('syncQueue', item);\n\n      // 同時標記原始資料為已同步\n      await this.db.markAsSynced(item.tableName, item.recordId);\n    }\n  }\n\n  /**\n   * 標記同步項目為失敗\n   */\n  async markSyncFailed(queueItemId: string, error: string): Promise<void> {\n    const item = await this.db.get<SyncQueueItem>('syncQueue', queueItemId);\n    if (item) {\n      item.status = 'failed';\n      item.error = error;\n      item.retryCount += 1;\n      await this.db.update('syncQueue', item);\n    }\n  }\n\n  /**\n   * 清空已完成的同步佇列\n   */\n  async clearCompletedSync(): Promise<void> {\n    const completed = await this.db.getByIndex<SyncQueueItem>(\n      'syncQueue',\n      'status',\n      'completed'\n    );\n\n    for (const item of completed) {\n      await this.db.delete('syncQueue', item.id);\n    }\n\n    console.log(`✅ 清空 ${completed.length} 筆已完成同步項目`);\n  }\n\n  // ===========================\n  // localStorage 輔助方法\n  // ===========================\n\n  /**\n   * 儲存設定到 localStorage\n   */\n  saveSetting(key: string, value: any): void {\n    if (!this.localStorage) return;\n    try {\n      this.localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.error('localStorage 儲存失敗:', error);\n    }\n  }\n\n  /**\n   * 從 localStorage 讀取設定\n   */\n  getSetting<T>(key: string, defaultValue?: T): T | null {\n    if (!this.localStorage) return defaultValue || null;\n    try {\n      const value = this.localStorage.getItem(key);\n      return value ? JSON.parse(value) : (defaultValue || null);\n    } catch (error) {\n      console.error('localStorage 讀取失敗:', error);\n      return defaultValue || null;\n    }\n  }\n\n  /**\n   * 刪除 localStorage 設定\n   */\n  removeSetting(key: string): void {\n    if (!this.localStorage) return;\n    this.localStorage.removeItem(key);\n  }\n\n  // ===========================\n  // 狀態查詢\n  // ===========================\n\n  /**\n   * 取得離線資料統計\n   */\n  async getStats() {\n    const stats: Record<string, number> = {};\n\n    const storeNames: StoreName[] = [\n      'tours',\n      'orders',\n      'quotes',\n      'paymentRequests',\n      'todos',\n      'suppliers',\n      'customers'\n    ];\n\n    for (const storeName of storeNames) {\n      stats[storeName] = await this.db.count(storeName);\n    }\n\n    const pendingSync = await this.getPendingSyncItems();\n    stats.pendingSync = pendingSync.length;\n\n    return stats;\n  }\n\n  /**\n   * 檢查是否有未同步資料\n   */\n  async hasUnsyncedData(): Promise<boolean> {\n    const pending = await this.getPendingSyncItems();\n    return pending.length > 0;\n  }\n}\n\n// ===========================\n// 單例模式\n// ===========================\n\nlet offlineManager: OfflineManager | null = null;\n\nexport function getOfflineManager(): OfflineManager {\n  if (!offlineManager) {\n    offlineManager = new OfflineManager();\n  }\n  return offlineManager;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2087, "column": 0}, "map": {"version":3,"sources":["file:///Users/williamchien/Desktop/Venturo/venturo-new/src/lib/offline/sync-engine.ts"],"sourcesContent":["/**\n * 🔄 Venturo v4.0 - 同步引擎\n *\n * 功能：\n * - 處理同步佇列\n * - 上傳本地變更到 Supabase\n * - 下載雲端變更到本地\n * - 衝突處理\n */\n\nimport { getOfflineManager, SyncQueueItem } from './offline-manager'\nimport { toSupabase, fromSupabase } from './unified-types'\n\n// 同步狀態\nexport interface SyncStatus {\n  isSyncing: boolean\n  lastSyncTime?: string\n  pendingCount: number\n  completedCount: number\n  failedCount: number\n  errors: string[]\n}\n\n// 同步配置\nexport interface SyncConfig {\n  enableAutoSync: boolean\n  syncInterval: number // 毫秒\n  batchSize: number\n  maxRetries: number\n}\n\nconst DEFAULT_CONFIG: SyncConfig = {\n  enableAutoSync: false, // 預設關閉自動同步\n  syncInterval: 30000, // 30 秒\n  batchSize: 10,\n  maxRetries: 3\n}\n\n// ===========================\n// 同步引擎類別\n// ===========================\n\nexport class SyncEngine {\n  private offlineManager = getOfflineManager()\n  private config: SyncConfig = DEFAULT_CONFIG\n  private syncTimer: NodeJS.Timeout | null = null\n  private isSyncing = false\n  private hasSupabase = false\n\n  constructor(config?: Partial<SyncConfig>) {\n    if (config) {\n      this.config = { ...DEFAULT_CONFIG, ...config }\n    }\n\n    // 檢查 Supabase 是否配置\n    this.checkSupabaseAvailability()\n  }\n\n  /**\n   * 檢查 Supabase 是否可用\n   */\n  private checkSupabaseAvailability() {\n    if (typeof window === 'undefined') return\n\n    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\n    const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\n    this.hasSupabase = !!(supabaseUrl && supabaseKey && supabaseUrl !== 'your_supabase_url_here')\n\n    if (!this.hasSupabase) {\n      console.warn('⚠️ Supabase 未配置，使用模擬同步模式')\n    }\n  }\n\n  /**\n   * 開始自動同步\n   */\n  startAutoSync() {\n    if (this.syncTimer) return\n\n    console.log('🔄 啟動自動同步，間隔:', this.config.syncInterval / 1000, '秒')\n\n    this.syncTimer = setInterval(() => {\n      this.syncAll().catch(error => {\n        console.error('自動同步失敗:', error)\n      })\n    }, this.config.syncInterval)\n\n    // 立即執行一次\n    this.syncAll().catch(error => {\n      console.error('初始同步失敗:', error)\n    })\n  }\n\n  /**\n   * 停止自動同步\n   */\n  stopAutoSync() {\n    if (this.syncTimer) {\n      clearInterval(this.syncTimer)\n      this.syncTimer = null\n      console.log('⏸️ 停止自動同步')\n    }\n  }\n\n  /**\n   * 同步所有待處理項目\n   */\n  async syncAll(): Promise<SyncStatus> {\n    if (this.isSyncing) {\n      console.log('⏳ 同步進行中，跳過本次')\n      return this.getStatus()\n    }\n\n    this.isSyncing = true\n    const status: SyncStatus = {\n      isSyncing: true,\n      lastSyncTime: new Date().toISOString(),\n      pendingCount: 0,\n      completedCount: 0,\n      failedCount: 0,\n      errors: []\n    }\n\n    try {\n      // 取得待同步項目\n      const pendingItems = await this.offlineManager.getPendingSyncItems()\n      status.pendingCount = pendingItems.length\n\n      if (pendingItems.length === 0) {\n        console.log('✅ 沒有待同步項目')\n        return status\n      }\n\n      console.log(`🔄 開始同步 ${pendingItems.length} 筆資料`)\n\n      // 批次處理\n      const batches = this.createBatches(pendingItems, this.config.batchSize)\n\n      for (const batch of batches) {\n        for (const item of batch) {\n          try {\n            await this.syncItem(item)\n            status.completedCount++\n          } catch (error) {\n            status.failedCount++\n            status.errors.push(`${item.tableName}/${item.recordId}: ${error instanceof Error ? error.message : '未知錯誤'}`)\n          }\n        }\n      }\n\n      // 清理已完成的同步項目\n      await this.offlineManager.clearCompletedSync()\n\n      console.log(`✅ 同步完成: ${status.completedCount} 成功, ${status.failedCount} 失敗`)\n\n      return status\n    } catch (error) {\n      console.error('❌ 同步過程發生錯誤:', error)\n      status.errors.push(error instanceof Error ? error.message : '未知錯誤')\n      return status\n    } finally {\n      this.isSyncing = false\n    }\n  }\n\n  /**\n   * 同步單個項目\n   */\n  private async syncItem(item: SyncQueueItem): Promise<void> {\n    if (!this.hasSupabase) {\n      // 模擬同步模式：直接標記為完成\n      await this.offlineManager.markSyncCompleted(item.id)\n      console.log(`✅ [模擬] 同步完成:`, item.operation, item.tableName, item.recordId)\n      return\n    }\n\n    // 真實 Supabase 同步邏輯\n    try {\n      // 轉換資料格式：camelCase -> snake_case\n      const supabaseData = item.data ? toSupabase(item.data) : null\n\n      switch (item.operation) {\n        case 'create':\n          if (supabaseData) {\n            // await supabase.from(item.tableName).insert(supabaseData)\n            console.log(`✅ 建立:`, item.tableName, item.recordId)\n          }\n          break\n\n        case 'update':\n          if (supabaseData) {\n            // await supabase.from(item.tableName).update(supabaseData).eq('id', item.recordId)\n            console.log(`✅ 更新:`, item.tableName, item.recordId)\n          }\n          break\n\n        case 'delete':\n          // await supabase.from(item.tableName).delete().eq('id', item.recordId)\n          console.log(`✅ 刪除:`, item.tableName, item.recordId)\n          break\n      }\n\n      // 標記為完成\n      await this.offlineManager.markSyncCompleted(item.id)\n\n    } catch (error) {\n      // 重試邏輯\n      if (item.retryCount < this.config.maxRetries) {\n        await this.offlineManager.markSyncFailed(\n          item.id,\n          error instanceof Error ? error.message : '未知錯誤'\n        )\n      } else {\n        console.error(`❌ 同步失敗（已達最大重試次數）:`, item.tableName, item.recordId)\n        throw error\n      }\n    }\n  }\n\n  /**\n   * 取得同步狀態\n   */\n  async getStatus(): Promise<SyncStatus> {\n    const pendingItems = await this.offlineManager.getPendingSyncItems()\n\n    return {\n      isSyncing: this.isSyncing,\n      lastSyncTime: undefined,\n      pendingCount: pendingItems.length,\n      completedCount: 0,\n      failedCount: 0,\n      errors: []\n    }\n  }\n\n  /**\n   * 手動觸發同步\n   */\n  async manualSync(): Promise<SyncStatus> {\n    console.log('🔄 手動觸發同步')\n    return await this.syncAll()\n  }\n\n  /**\n   * 建立批次\n   */\n  private createBatches<T>(items: T[], batchSize: number): T[][] {\n    const batches: T[][] = []\n    for (let i = 0; i < items.length; i += batchSize) {\n      batches.push(items.slice(i, i + batchSize))\n    }\n    return batches\n  }\n\n  /**\n   * 清空所有待同步項目（僅用於測試）\n   */\n  async clearAllPending(): Promise<number> {\n    const pendingItems = await this.offlineManager.getPendingSyncItems()\n\n    for (const item of pendingItems) {\n      await this.offlineManager.markSyncCompleted(item.id)\n    }\n\n    await this.offlineManager.clearCompletedSync()\n\n    console.log(`🗑️ 清空 ${pendingItems.length} 筆待同步項目`)\n    return pendingItems.length\n  }\n}\n\n// ===========================\n// 單例模式\n// ===========================\n\nlet syncEngine: SyncEngine | null = null\n\nexport function getSyncEngine(config?: Partial<SyncConfig>): SyncEngine {\n  if (!syncEngine) {\n    syncEngine = new SyncEngine(config)\n  }\n  return syncEngine\n}\n\n/**\n * 快速清空同步佇列（用於開發測試）\n */\nexport async function clearSyncQueue(): Promise<number> {\n  const engine = getSyncEngine()\n  return await engine.clearAllPending()\n}\n\n/**\n * 手動同步\n */\nexport async function manualSync(): Promise<SyncStatus> {\n  const engine = getSyncEngine()\n  return await engine.manualSync()\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2319, "column": 0}, "map": {"version":3,"sources":["file:///Users/williamchien/Desktop/Venturo/venturo-new/src/lib/offline/auto-sync-provider.tsx"],"sourcesContent":["'use client'\n\n/**\n * 🔄 Venturo v4.0 - 自動同步 Provider\n *\n * 功能：\n * - 在應用啟動時自動初始化同步引擎\n * - 監聽網路狀態，網路恢復時自動同步\n * - 定期背景同步（可配置）\n * - 提供同步狀態給整個應用\n */\n\nimport { createContext, useContext, useEffect, useState, ReactNode } from 'react'\nimport { getSyncEngine, SyncStatus } from './sync-engine'\nimport { getOfflineManager } from './offline-manager'\n\ninterface AutoSyncContextValue {\n  syncStatus: SyncStatus | null\n  isOnline: boolean\n  triggerSync: () => Promise<void>\n  enableAutoSync: () => void\n  disableAutoSync: () => void\n}\n\nconst AutoSyncContext = createContext<AutoSyncContextValue>({\n  syncStatus: null,\n  isOnline: true,\n  triggerSync: async () => {},\n  enableAutoSync: () => {},\n  disableAutoSync: () => {}\n})\n\nexport function useAutoSync() {\n  return useContext(AutoSyncContext)\n}\n\ninterface AutoSyncProviderProps {\n  children: ReactNode\n  enabled?: boolean // 是否啟用自動同步，預設 true\n  interval?: number // 同步間隔（毫秒），預設 30000 (30秒)\n}\n\nexport function AutoSyncProvider({\n  children,\n  enabled = true,\n  interval = 30000\n}: AutoSyncProviderProps) {\n  const [syncStatus, setSyncStatus] = useState<SyncStatus | null>(null)\n  const [isOnline, setIsOnline] = useState(true)\n  const [autoSyncEnabled, setAutoSyncEnabled] = useState(enabled)\n  const [syncEngine] = useState(() => getSyncEngine({\n    enableAutoSync: enabled,\n    syncInterval: interval\n  }))\n\n  // 監聽網路狀態\n  useEffect(() => {\n    if (typeof window === 'undefined') return\n\n    const handleOnline = async () => {\n      console.log('🌐 網路已恢復，準備同步...')\n      setIsOnline(true)\n\n      // 網路恢復時立即同步\n      try {\n        const status = await syncEngine.manualSync()\n        setSyncStatus(status)\n      } catch (error) {\n        console.error('網路恢復後同步失敗:', error)\n      }\n    }\n\n    const handleOffline = () => {\n      console.log('📴 網路已斷線，切換到離線模式')\n      setIsOnline(false)\n    }\n\n    window.addEventListener('online', handleOnline)\n    window.addEventListener('offline', handleOffline)\n\n    // 初始狀態\n    setIsOnline(navigator.onLine)\n\n    return () => {\n      window.removeEventListener('online', handleOnline)\n      window.removeEventListener('offline', handleOffline)\n    }\n  }, [syncEngine])\n\n  // 自動同步機制\n  useEffect(() => {\n    if (!autoSyncEnabled) return\n\n    console.log('🔄 啟動自動同步機制')\n    syncEngine.startAutoSync()\n\n    return () => {\n      console.log('⏸️ 停止自動同步機制')\n      syncEngine.stopAutoSync()\n    }\n  }, [autoSyncEnabled, syncEngine])\n\n  // 定期更新同步狀態\n  useEffect(() => {\n    const updateStatus = async () => {\n      try {\n        const status = await syncEngine.getStatus()\n        setSyncStatus(status)\n      } catch (error) {\n        console.error('更新同步狀態失敗:', error)\n      }\n    }\n\n    // 初始化時載入狀態\n    updateStatus()\n\n    // 每 5 秒更新一次狀態\n    const statusInterval = setInterval(updateStatus, 5000)\n\n    return () => clearInterval(statusInterval)\n  }, [syncEngine])\n\n  const triggerSync = async () => {\n    try {\n      const status = await syncEngine.manualSync()\n      setSyncStatus(status)\n    } catch (error) {\n      console.error('手動同步失敗:', error)\n      throw error\n    }\n  }\n\n  const enableAutoSync = () => {\n    setAutoSyncEnabled(true)\n  }\n\n  const disableAutoSync = () => {\n    setAutoSyncEnabled(false)\n  }\n\n  const contextValue: AutoSyncContextValue = {\n    syncStatus,\n    isOnline,\n    triggerSync,\n    enableAutoSync,\n    disableAutoSync\n  }\n\n  return (\n    <AutoSyncContext.Provider value={contextValue}>\n      {children}\n    </AutoSyncContext.Provider>\n  )\n}\n"],"names":[],"mappings":";;;;;;;AAEA;;;;;;;;CAQC,GAED;AACA;AAbA;;;;AAwBA,MAAM,gCAAkB,IAAA,sNAAa,EAAuB;IAC1D,YAAY;IACZ,UAAU;IACV,aAAa,WAAa;IAC1B,gBAAgB,KAAO;IACvB,iBAAiB,KAAO;AAC1B;AAEO,SAAS;IACd,OAAO,IAAA,mNAAU,EAAC;AACpB;AAQO,SAAS,iBAAiB,EAC/B,QAAQ,EACR,UAAU,IAAI,EACd,WAAW,KAAK,EACM;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAoB;IAChE,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;IACzC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,iNAAQ,EAAC;IACvD,MAAM,CAAC,WAAW,GAAG,IAAA,iNAAQ,EAAC,IAAM,IAAA,wJAAa,EAAC;YAChD,gBAAgB;YAChB,cAAc;QAChB;IAEA,SAAS;IACT,IAAA,kNAAS,EAAC;QACR,wCAAmC;;;QAEnC,MAAM;QAaN,MAAM;IAeR,GAAG;QAAC;KAAW;IAEf,SAAS;IACT,IAAA,kNAAS,EAAC;QACR,IAAI,CAAC,iBAAiB;QAEtB,QAAQ,GAAG,CAAC;QACZ,WAAW,aAAa;QAExB,OAAO;YACL,QAAQ,GAAG,CAAC;YACZ,WAAW,YAAY;QACzB;IACF,GAAG;QAAC;QAAiB;KAAW;IAEhC,WAAW;IACX,IAAA,kNAAS,EAAC;QACR,MAAM,eAAe;YACnB,IAAI;gBACF,MAAM,SAAS,MAAM,WAAW,SAAS;gBACzC,cAAc;YAChB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,aAAa;YAC7B;QACF;QAEA,WAAW;QACX;QAEA,cAAc;QACd,MAAM,iBAAiB,YAAY,cAAc;QAEjD,OAAO,IAAM,cAAc;IAC7B,GAAG;QAAC;KAAW;IAEf,MAAM,cAAc;QAClB,IAAI;YACF,MAAM,SAAS,MAAM,WAAW,UAAU;YAC1C,cAAc;QAChB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,WAAW;YACzB,MAAM;QACR;IACF;IAEA,MAAM,iBAAiB;QACrB,mBAAmB;IACrB;IAEA,MAAM,kBAAkB;QACtB,mBAAmB;IACrB;IAEA,MAAM,eAAqC;QACzC;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,8OAAC,gBAAgB,QAAQ;QAAC,OAAO;kBAC9B;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 2434, "column": 0}, "map": {"version":3,"sources":["file:///Users/williamchien/Desktop/Venturo/venturo-new/src/components/layout/sidebar.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef, useMemo } from 'react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport {\n  ChevronLeft,\n  ChevronRight,\n  Home,\n  MapPin,\n  ShoppingCart,\n  Users,\n  CreditCard,\n  CheckSquare,\n  Settings,\n  Calculator,\n  Database,\n  Building2,\n  Wallet,\n  Clock,\n  UserCog,\n  Receipt,\n  FileText,\n  BarChart3,\n  Calendar,\n  TrendingDown,\n  FileCheck\n} from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { useAuthStore } from '@/stores/auth-store';\nimport { useAutoSync } from '@/lib/offline/auto-sync-provider';\nimport { Wifi, WifiOff } from 'lucide-react';\n\ninterface MenuItem {\n  href: string;\n  label: string;\n  icon: React.ElementType;\n  children?: MenuItem[];\n  requiredPermission?: string;\n}\n\nconst menuItems: MenuItem[] = [\n  {\n    href: '/',\n    label: '首頁',\n    icon: Home,\n  },\n  {\n    href: '/calendar',\n    label: '行事曆',\n    icon: Calendar,\n    requiredPermission: 'calendar',\n  },\n  {\n    href: '/workspace',\n    label: '工作空間',\n    icon: Building2,\n    requiredPermission: 'workspace',\n  },\n  {\n    href: '/accounting',\n    label: '記帳管理',\n    icon: Wallet,\n    requiredPermission: 'accounting',\n  },\n  {\n    href: '/timebox',\n    label: '箱型時間',\n    icon: Clock,\n    requiredPermission: 'timebox',\n  },\n  {\n    href: '/todos',\n    label: '待辦事項',\n    icon: CheckSquare,\n    requiredPermission: 'todos',\n  },\n  {\n    href: '/tours',\n    label: '旅遊團',\n    icon: MapPin,\n    requiredPermission: 'tours',\n  },\n  {\n    href: '/orders',\n    label: '訂單',\n    icon: ShoppingCart,\n    requiredPermission: 'orders',\n  },\n  {\n    href: '/quotes',\n    label: '報價單',\n    icon: Calculator,\n    requiredPermission: 'quotes',\n  },\n  {\n    href: '/visas',\n    label: '簽證管理',\n    icon: FileCheck,\n    requiredPermission: 'visas',\n  },\n  {\n    href: '/finance',\n    label: '財務系統',\n    icon: CreditCard,\n    requiredPermission: 'finance',\n    children: [\n      { href: '/finance/payments', label: '收款管理', icon: CreditCard, requiredPermission: 'payments' },\n      { href: '/finance/requests', label: '請款管理', icon: TrendingDown, requiredPermission: 'requests' },\n      { href: '/finance/treasury', label: '出納管理', icon: Wallet, requiredPermission: 'disbursement' },\n      { href: '/finance/reports', label: '報表管理', icon: BarChart3, requiredPermission: 'reports' },\n    ]\n  },\n  {\n    href: '/database',\n    label: '資料管理',\n    icon: Database,\n    requiredPermission: 'database',\n    children: [\n      { href: '/customers', label: '顧客管理', icon: Users, requiredPermission: 'customers' },\n      { href: '/database/regions', label: '地區管理', icon: MapPin, requiredPermission: 'database' },\n      { href: '/database/transport', label: '交通選項', icon: ShoppingCart, requiredPermission: 'database' },\n      { href: '/database/activities', label: '活動門票', icon: CheckSquare, requiredPermission: 'database' },\n      { href: '/database/pricing', label: '價格管理', icon: Calculator, requiredPermission: 'database' },\n      { href: '/database/suppliers', label: '供應商管理', icon: Building2, requiredPermission: 'database' },\n    ]\n  },\n  {\n    href: '/hr',\n    label: '人資管理',\n    icon: UserCog,\n    requiredPermission: 'hr',\n  },\n  {\n    href: '/guide',\n    label: '系統說明',\n    icon: Settings,\n  },\n];\n\nexport function Sidebar() {\n  const pathname = usePathname();\n  const { sidebarCollapsed, toggleSidebar, user, logout } = useAuthStore();\n  const [hoveredItem, setHoveredItem] = useState<string | null>(null);\n  const [dropdownPosition, setDropdownPosition] = useState({ top: 0, left: 0 });\n  const sidebarRef = useRef<HTMLDivElement>(null);\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const [showSyncTooltip, setShowSyncTooltip] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  const { syncStatus, isOnline } = useAutoSync();\n  const pendingCount = syncStatus?.pendingCount || 0;\n  const hasPendingChanges = pendingCount > 0;\n\n  // 確保組件已掛載\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  // 清理定時器\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  const handleMouseEnter = (item: MenuItem, element: HTMLElement) => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    if (item.children) {\n      const rect = element.getBoundingClientRect();\n      setDropdownPosition({\n        top: rect.top,\n        left: sidebarCollapsed ? 64 : 180\n      });\n      setHoveredItem(item.href);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    timeoutRef.current = setTimeout(() => {\n      setHoveredItem(null);\n    }, 150);\n  };\n\n  const handleDropdownMouseEnter = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  };\n\n  const handleDropdownMouseLeave = () => {\n    setHoveredItem(null);\n  };\n\n  const isActive = (href: string) => {\n    if (href === '/') return pathname === '/';\n    return pathname.startsWith(href);\n  };\n\n  const getHoveredItemChildren = () => {\n    if (!hoveredItem) return [];\n    const item = menuItems.find(item => item.href === hoveredItem);\n    return item?.children || [];\n  };\n\n  // 使用 useMemo 優化權限過濾\n  const visibleMenuItems = useMemo(() => {\n    const filterMenuByPermissions = (items: MenuItem[]): MenuItem[] => {\n      if (!user) {\n        return items.filter(item => !item.requiredPermission);\n      }\n\n      const userPermissions = user.permissions || [];\n      const isSuperAdmin = userPermissions.includes('super_admin') || userPermissions.includes('system.admin');\n\n      return items\n        .filter(item => {\n          if (!item.requiredPermission) return true;\n          if (isSuperAdmin) return true;\n          return userPermissions.includes(item.requiredPermission);\n        })\n        .map(item => {\n          if (item.children) {\n            return {\n              ...item,\n              children: filterMenuByPermissions(item.children)\n            };\n          }\n          return item;\n        });\n    };\n\n    return filterMenuByPermissions(menuItems);\n  }, [user]);\n\n  return (\n    <>\n      <div\n        ref={sidebarRef}\n        className={cn(\n          'fixed left-0 top-0 h-screen bg-morandi-container border-r border-border z-50 group',\n          sidebarCollapsed\n            ? 'w-16 hover:w-[180px] transition-[width] duration-300'\n            : 'w-[180px]'\n        )}\n      >\n        {/* Logo區域 */}\n        <div>\n          <div className=\"h-18 flex items-center relative mx-3\">\n            <div className=\"absolute left-5 top-1/2 -translate-x-1/2 -translate-y-1/2 w-10 h-10 rounded-lg bg-gradient-to-br from-[#d4c5a9] via-[#c9b896] to-[#bfad87] flex items-center justify-center shadow-sm flex-shrink-0 opacity-90\">\n              <span className=\"text-white/95 font-semibold text-lg\">V</span>\n            </div>\n            <div className={cn(\n              \"ml-12 text-xl font-bold text-morandi-primary transition-opacity duration-300\",\n              sidebarCollapsed ? \"opacity-0 group-hover:opacity-100\" : \"opacity-100\"\n            )}>\n              CORNER\n            </div>\n            {!sidebarCollapsed && (\n              <button\n                onClick={toggleSidebar}\n                className=\"absolute right-3 p-2 hover:bg-morandi-container rounded-lg transition-colors\"\n              >\n                <ChevronLeft size={20} />\n              </button>\n            )}\n          </div>\n          <div style={{ marginLeft: '12px', marginRight: '12px', borderTop: '1px solid var(--border)', height: '1px' }}></div>\n        </div>\n\n        {/* 導航選單 */}\n        <nav className=\"flex-1 py-4\">\n          <ul className=\"space-y-1\">\n            {visibleMenuItems.map((item) => (\n              <li key={item.href}>\n                {item.children ? (\n                  // 有子選單的項目\n                  <div\n                    className={cn(\n                      'w-full relative h-10 text-sm text-morandi-secondary hover:bg-morandi-container hover:text-morandi-primary transition-colors cursor-pointer',\n                      isActive(item.href) && 'bg-morandi-container text-morandi-primary'\n                    )}\n                    onMouseEnter={(e) => handleMouseEnter(item, e.currentTarget)}\n                    onMouseLeave={handleMouseLeave}\n                  >\n                    <item.icon size={20} className=\"absolute left-8 top-1/2 -translate-x-1/2 -translate-y-1/2\" />\n                    <span className={cn(\n                      \"ml-12 block text-left leading-10 transition-opacity duration-300\",\n                      sidebarCollapsed ? \"opacity-0 group-hover:opacity-100\" : \"opacity-100\"\n                    )}>\n                      {item.label}\n                    </span>\n                    {!sidebarCollapsed && (\n                      <ChevronRight\n                        size={16}\n                        className=\"absolute right-4 top-1/2 -translate-y-1/2 transition-transform duration-300\"\n                      />\n                    )}\n                  </div>\n                ) : (\n                  // 沒有子選單的項目\n                  <Link\n                    href={item.href}\n                    prefetch={false}\n                    className={cn(\n                      'w-full relative block h-10 text-sm text-morandi-secondary hover:bg-morandi-container hover:text-morandi-primary transition-colors',\n                      isActive(item.href) && 'bg-morandi-container text-morandi-primary border-r-2 border-morandi-gold'\n                    )}\n                  >\n                    <item.icon size={20} className=\"absolute left-8 top-1/2 -translate-x-1/2 -translate-y-1/2\" />\n                    <span className={cn(\n                      \"ml-12 block text-left leading-10 transition-opacity duration-300\",\n                      sidebarCollapsed ? \"opacity-0 group-hover:opacity-100\" : \"opacity-100\"\n                    )}>\n                      {item.label}\n                    </span>\n                  </Link>\n                )}\n              </li>\n            ))}\n          </ul>\n        </nav>\n\n        {/* 底部功能區 */}\n        <div className=\"py-4\">\n          <div className=\"mb-4\" style={{ marginLeft: '12px', marginRight: '12px', borderTop: '1px solid var(--border)', height: '1px' }}></div>\n          {!sidebarCollapsed && user && (\n            <div className=\"mb-4 mx-4 p-3 bg-morandi-container rounded-lg\">\n              <div className=\"text-sm font-medium text-morandi-primary\">\n                {user.chineseName}\n              </div>\n              <div className=\"text-xs text-morandi-secondary\">\n                {user.employeeNumber}\n              </div>\n            </div>\n          )}\n\n          <ul className=\"space-y-1\">\n            <li>\n              <Link\n                href=\"/settings\"\n                prefetch={false}\n                className={cn(\n                  'w-full relative block h-10 text-sm text-morandi-secondary hover:bg-morandi-container hover:text-morandi-primary transition-colors',\n                  pathname === '/settings' && 'bg-morandi-container text-morandi-primary border-r-2 border-morandi-gold'\n                )}\n              >\n                <Settings size={20} className=\"absolute left-8 top-1/2 -translate-x-1/2 -translate-y-1/2\" />\n                <span className={cn(\n                  \"ml-12 block text-left leading-10 transition-opacity duration-300\",\n                  sidebarCollapsed ? \"opacity-0 group-hover:opacity-100\" : \"opacity-100\"\n                )}>\n                  設定\n                </span>\n              </Link>\n            </li>\n\n            {/* 網路狀態指示器 - 只在客戶端渲染 */}\n            {mounted && (\n              <li>\n                <div\n                  className=\"w-full relative block h-10 text-sm hover:bg-morandi-container transition-colors group/sync\"\n                  onMouseEnter={() => setShowSyncTooltip(true)}\n                  onMouseLeave={() => setShowSyncTooltip(false)}\n                >\n                {isOnline ? (\n                  <Wifi size={20} className={cn(\n                    \"absolute left-8 top-1/2 -translate-x-1/2 -translate-y-1/2 transition-colors\",\n                    hasPendingChanges ? \"text-orange-500\" : \"text-green-500\"\n                  )} />\n                ) : (\n                  <WifiOff size={20} className=\"absolute left-8 top-1/2 -translate-x-1/2 -translate-y-1/2 text-red-500\" />\n                )}\n                <span className={cn(\n                  \"ml-12 block text-left leading-10 transition-opacity duration-300\",\n                  sidebarCollapsed ? \"opacity-0 group-hover:opacity-100\" : \"opacity-100\",\n                  isOnline ? (hasPendingChanges ? \"text-orange-500\" : \"text-green-500\") : \"text-red-500\"\n                )}>\n                  {isOnline ? (hasPendingChanges ? `${pendingCount} 待同步` : '已連線') : '離線'}\n                </span>\n                </div>\n\n                {/* Hover 顯示詳細資訊 - 移到 li 外面 */}\n                {showSyncTooltip && (\n                  <div className=\"fixed left-[196px] bg-card border border-border rounded-lg shadow-lg p-3 min-w-48 z-[70]\" style={{ top: `${dropdownPosition.top}px` }}>\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      {isOnline ? (\n                        <Wifi size={16} className=\"text-green-500\" />\n                      ) : (\n                        <WifiOff size={16} className=\"text-red-500\" />\n                      )}\n                      <span className=\"text-sm font-medium\">\n                        {isOnline ? '網路已連線' : '離線模式'}\n                      </span>\n                    </div>\n                    {hasPendingChanges && (\n                      <div className=\"text-xs text-morandi-secondary\">\n                        {pendingCount} 個變更待同步\n                      </div>\n                    )}\n                    {!isOnline && (\n                      <div className=\"text-xs text-morandi-secondary mt-1\">\n                        您的變更將在恢復連線後同步\n                      </div>\n                    )}\n                  </div>\n                )}\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n\n      {/* 懸浮下拉選單 */}\n      {hoveredItem && getHoveredItemChildren().length > 0 && (\n        <div\n          className=\"fixed bg-card border border-border rounded-lg shadow-lg py-2 min-w-48 z-[60]\"\n          style={{\n            top: dropdownPosition.top,\n            left: dropdownPosition.left + 8,\n          }}\n          onMouseEnter={handleDropdownMouseEnter}\n          onMouseLeave={handleDropdownMouseLeave}\n        >\n          {getHoveredItemChildren().map((child) => (\n            <Link\n              key={child.href}\n              href={child.href}\n              prefetch={false}\n              className={cn(\n                'flex items-center px-4 py-2 text-sm text-morandi-secondary hover:bg-morandi-container hover:text-morandi-primary transition-colors',\n                isActive(child.href) && 'bg-morandi-container text-morandi-primary'\n              )}\n            >\n              <child.icon size={16} className=\"mr-3\" />\n              <span>{child.label}</span>\n            </Link>\n          ))}\n        </div>\n      )}\n    </>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3114, "column": 0}, "map": {"version":3,"sources":["file:///Users/williamchien/Desktop/Venturo/venturo-new/src/components/layout/main-layout.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useAuthStore } from '@/stores/auth-store';\nimport { useLocalAuthStore } from '@/lib/auth/local-auth-manager';\nimport { Sidebar } from './sidebar';\nimport { cn } from '@/lib/utils';\nimport { usePathname, useRouter } from 'next/navigation';\n\ninterface MainLayoutProps {\n  children: React.ReactNode;\n}\n\nexport function MainLayout({ children }: MainLayoutProps) {\n  const { sidebarCollapsed } = useAuthStore();\n  const { currentProfile } = useLocalAuthStore();\n  const pathname = usePathname();\n  const router = useRouter();\n  const [isClient, setIsClient] = useState(false);\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  // 簡化的認證檢查 - 暫時停用,使用 auth-store 的 user\n  useEffect(() => {\n    if (!isClient) return;\n    if (pathname === '/login') return;\n\n    // 給 Zustand persist 一點時間載入\n    const checkTimeout = setTimeout(() => {\n      const authUser = useAuthStore.getState().user;\n\n      // 暫時停用檢查,避免無限循環\n      // if (!authUser) {\n      //   router.push('/login');\n      // }\n    }, 50);\n\n    return () => clearTimeout(checkTimeout);\n  }, [isClient, pathname, currentProfile, router]);\n\n  // 初始化離線資料庫\n  useEffect(() => {\n    // 離線資料庫會在 sync-manager 中自動初始化\n  }, [isClient]);\n\n  // 不需要側邊欄的頁面\n  const noSidebarPages = ['/login', '/unauthorized'];\n  const shouldShowSidebar = !noSidebarPages.includes(pathname);\n\n  // 登入頁不需要側邊欄\n  if (!shouldShowSidebar) {\n    return (\n      <div className=\"min-h-screen bg-background\">\n        {children}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* 左下象限 - 側邊欄 */}\n      <Sidebar />\n\n      {/* 右下象限 - 主內容區域 */}\n      <main className={cn(\n        'transition-all duration-300 pt-18',\n        !isClient ? 'ml-16' : (sidebarCollapsed ? 'ml-16' : 'ml-64')\n      )}>\n        <div className=\"h-[calc(100vh-72px)] p-6\">\n          {children}\n        </div>\n      </main>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;AAaO,SAAS,WAAW,EAAE,QAAQ,EAAmB;IACtD,MAAM,EAAE,gBAAgB,EAAE,GAAG,IAAA,8IAAY;IACzC,MAAM,EAAE,cAAc,EAAE,GAAG,IAAA,mKAAiB;IAC5C,MAAM,WAAW,IAAA,iJAAW;IAC5B,MAAM,SAAS,IAAA,+IAAS;IACxB,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;IAEzC,IAAA,kNAAS,EAAC;QACR,YAAY;IACd,GAAG,EAAE;IAEL,sCAAsC;IACtC,IAAA,kNAAS,EAAC;QACR,IAAI,CAAC,UAAU;QACf,IAAI,aAAa,UAAU;QAE3B,2BAA2B;QAC3B,MAAM,eAAe,WAAW;YAC9B,MAAM,WAAW,8IAAY,CAAC,QAAQ,GAAG,IAAI;QAE7C,gBAAgB;QAChB,mBAAmB;QACnB,2BAA2B;QAC3B,IAAI;QACN,GAAG;QAEH,OAAO,IAAM,aAAa;IAC5B,GAAG;QAAC;QAAU;QAAU;QAAgB;KAAO;IAE/C,WAAW;IACX,IAAA,kNAAS,EAAC;IACR,8BAA8B;IAChC,GAAG;QAAC;KAAS;IAEb,YAAY;IACZ,MAAM,iBAAiB;QAAC;QAAU;KAAgB;IAClD,MAAM,oBAAoB,CAAC,eAAe,QAAQ,CAAC;IAEnD,YAAY;IACZ,IAAI,CAAC,mBAAmB;QACtB,qBACE,8OAAC;YAAI,WAAU;sBACZ;;;;;;IAGP;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC,kJAAO;;;;;0BAGR,8OAAC;gBAAK,WAAW,IAAA,yHAAE,EACjB,qCACA,CAAC,WAAW,UAAW,mBAAmB,UAAU;0BAEpD,cAAA,8OAAC;oBAAI,WAAU;8BACZ;;;;;;;;;;;;;;;;;AAKX","debugId":null}},
    {"offset": {"line": 3218, "column": 0}, "map": {"version":3,"sources":["file:///Users/williamchien/Desktop/Venturo/venturo-new/src/stores/theme-store.ts"],"sourcesContent":["import { create } from 'zustand';\n\nexport type ThemeType = 'morandi' | 'modern-dark';\n\ninterface ThemeState {\n  // 當前主題\n  currentTheme: ThemeType;\n  \n  // 初始化主題\n  initTheme: () => void;\n  \n  // 切換主題\n  setTheme: (theme: ThemeType) => void;\n  \n  // 切換主題（toggle）\n  toggleTheme: () => void;\n}\n\nexport const useThemeStore = create<ThemeState>((set, get) => ({\n  currentTheme: 'morandi',\n  \n  initTheme: () => {\n    // 從 localStorage 讀取主題\n    if (typeof window !== 'undefined') {\n      const savedTheme = localStorage.getItem('venturo-theme') as ThemeType;\n      if (savedTheme && ['morandi', 'modern-dark'].includes(savedTheme)) {\n        set({ currentTheme: savedTheme });\n        document.documentElement.setAttribute('data-theme', savedTheme);\n      }\n    }\n  },\n  \n  setTheme: (theme) => {\n    set({ currentTheme: theme });\n    // 更新 HTML 元素的 data-theme 屬性\n    document.documentElement.setAttribute('data-theme', theme);\n    // 儲存到 localStorage\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('venturo-theme', theme);\n    }\n  },\n  \n  toggleTheme: () => {\n    const newTheme = get().currentTheme === 'morandi' ? 'modern-dark' : 'morandi';\n    get().setTheme(newTheme);\n  },\n}));\n"],"names":[],"mappings":";;;;AAAA;;AAkBO,MAAM,gBAAgB,IAAA,kJAAM,EAAa,CAAC,KAAK,MAAQ,CAAC;QAC7D,cAAc;QAEd,WAAW;YACT,sBAAsB;YACtB;;QAOF;QAEA,UAAU,CAAC;YACT,IAAI;gBAAE,cAAc;YAAM;YAC1B,4BAA4B;YAC5B,SAAS,eAAe,CAAC,YAAY,CAAC,cAAc;YACpD,mBAAmB;YACnB;;QAGF;QAEA,aAAa;YACX,MAAM,WAAW,MAAM,YAAY,KAAK,YAAY,gBAAgB;YACpE,MAAM,QAAQ,CAAC;QACjB;IACF,CAAC","debugId":null}},
    {"offset": {"line": 3250, "column": 0}, "map": {"version":3,"sources":["file:///Users/williamchien/Desktop/Venturo/venturo-new/src/components/layout/theme-provider.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect } from 'react';\nimport { useThemeStore } from '@/stores/theme-store';\n\nexport function ThemeProvider({ children }: { children: React.ReactNode }) {\n  const { currentTheme, initTheme } = useThemeStore();\n\n  useEffect(() => {\n    // 初始化主題（從 localStorage 讀取）\n    initTheme();\n  }, [initTheme]);\n\n  useEffect(() => {\n    // 當主題改變時更新 HTML 屬性\n    document.documentElement.setAttribute('data-theme', currentTheme);\n  }, [currentTheme]);\n\n  return <>{children}</>;\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKO,SAAS,cAAc,EAAE,QAAQ,EAAiC;IACvE,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,IAAA,gJAAa;IAEjD,IAAA,kNAAS,EAAC;QACR,2BAA2B;QAC3B;IACF,GAAG;QAAC;KAAU;IAEd,IAAA,kNAAS,EAAC;QACR,mBAAmB;QACnB,SAAS,eAAe,CAAC,YAAY,CAAC,cAAc;IACtD,GAAG;QAAC;KAAa;IAEjB,qBAAO;kBAAG;;AACZ","debugId":null}}]
}